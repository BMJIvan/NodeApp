{"version":3,"file":"js/app.461960cd.js","mappings":"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","sources":["webpack://prueba/./src/components/drawflowApp.vue","webpack://prueba/./src/components/nodes/numericNode.vue","webpack://prueba/./src/components/nodes/nodeHeader.vue","webpack://prueba/./src/components/nodes/nodeHeader.vue?8855","webpack://prueba/./src/components/nodes/numericNode.vue?46af","webpack://prueba/./src/components/nodes/logicOps.vue","webpack://prueba/./src/components/nodes/logicOps.vue?1ece","webpack://prueba/./src/components/nodes/mathOps.vue","webpack://prueba/./src/components/nodes/mathOps.vue?7757","webpack://prueba/./src/components/nodes/ifElse.vue","webpack://prueba/./src/components/nodes/ifElse.vue?d29b","webpack://prueba/./src/components/nodes/FOR.vue","webpack://prueba/./src/components/nodes/FOR.vue?bfbf","webpack://prueba/./src/assets/drawflowExtend.js","webpack://prueba/./src/components/drawflowApp.vue?5154","webpack://prueba/./src/App.vue","webpack://prueba/./src/main.js","webpack://prueba/webpack/bootstrap","webpack://prueba/webpack/runtime/chunk loaded","webpack://prueba/webpack/runtime/compat get default export","webpack://prueba/webpack/runtime/define property getters","webpack://prueba/webpack/runtime/global","webpack://prueba/webpack/runtime/hasOwnProperty shorthand","webpack://prueba/webpack/runtime/make namespace object","webpack://prueba/webpack/runtime/jsonp chunk loading","webpack://prueba/webpack/startup"],"sourcesContent":["<template>\r\n\r\n<el-container>\r\n  <el-container class=\"name\">\r\n    <h3>Node App</h3>\r\n  </el-container>\r\n\r\n  <el-container>\r\n      <el-header class=\"header\">\r\n        <el-button type=\"primary\" @click=\"executeNodeCode\">Execute Node Code</el-button>\r\n        <el-button type=\"primary\" @click=\"pythonCode\">Make Python Code</el-button>\r\n        <el-button type=\"primary\" @click=\"clearEditor\">Clear Editor</el-button>\r\n        <el-button type=\"primary\" @click=\"importEditor\">Import Editor</el-button>\r\n        <el-button type=\"primary\" @click=\"exportEditor\">Export Editor</el-button>\r\n      </el-header>\r\n  </el-container>\r\n</el-container>\r\n\r\n<el-container>\r\n  <el-container class=\"container\">\r\n    <el-aside width=\"250px\" class=\"column\">\r\n        <ul>\r\n            <li v-for=\"n in listNodes\" :key=\"n\" draggable=\"true\" :data-node=\"n.item\" @dragstart=\"drag($event)\" class=\"drag-drawflow\" >\r\n                <div class=\"node\" :style=\"`background: ${n.color}`\" >{{ n.name }}</div>\r\n            </li>\r\n        </ul>\r\n    </el-aside>\r\n    <el-main>\r\n        <div id=\"drawflow\" @drop=\"drop($event)\" @dragover=\"allowDrop($event)\"></div>\r\n    </el-main>\r\n  </el-container>\r\n</el-container>\r\n\r\n<el-dialog\r\n  v-model=\"dialogVisiblePythonCode\" title=\"pythonCode\" width=\"50%\">\r\n  <span>Python Code:</span>\r\n  <pre><code id=\"pythonCode\">{{dialogPythonCode}}</code></pre>\r\n  <template #footer>\r\n    <span class=\"dialog-footer\">\r\n      <el-button @click=\"dialogVisiblePythonCode = false\">Cancel</el-button>\r\n      <el-button type=\"primary\" @click=\"dialogVisiblePythonCode = false\">Confirm</el-button>\r\n    </span>\r\n  </template>\r\n</el-dialog>\r\n\r\n<el-dialog\r\n    v-model=\"dialogVisibleImport\" title=\"Import\" width=\"50%\">\r\n    <span>Data:</span>\r\n    <pre><code id=\"importData\">{{dialogDataImport}}</code></pre>\r\n    <template #footer>\r\n      <span class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisibleImport = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"dialogVisibleImport = false, importDataConfirm()\">Confirm</el-button>\r\n      </span>\r\n    </template>\r\n</el-dialog>\r\n\r\n<el-dialog\r\n  v-model=\"dialogVisibleExport\" title=\"Export\" width=\"50%\">\r\n  <span>Data:</span>\r\n  <p id=\"exportData\">{{dialogDataExport}}</p>\r\n  <template #footer>\r\n    <span class=\"dialog-footer\">\r\n      <el-button @click=\"dialogVisibleExport = false\">Cancel</el-button>\r\n      <el-button type=\"primary\" @click=\"dialogVisibleExport = false, exportDataConfirm()\">Confirm</el-button>\r\n    </span>\r\n  </template>\r\n</el-dialog>\r\n\r\n  <el-container>\r\n    <el-container class=\"console\">Console: {{consoleData}}</el-container>\r\n    <el-container class=\"requests\">Requests: {{requestsData}} </el-container>\r\n  </el-container>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport DrawflowApp from 'drawflow/dist/drawflow.min.js'\r\nimport { onMounted, shallowRef, h, getCurrentInstance, render, readonly, ref } from 'vue'\r\nimport Numeric from './nodes/numericNode.vue'\r\nimport Logic from './nodes/logicOps.vue'\r\nimport Math from './nodes/mathOps.vue'\r\nimport IFELSE from './nodes/ifElse.vue'\r\nimport FOR from './nodes/FOR.vue'\r\nimport DrawflowExtend from '../assets/drawflowExtend.js'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'drawflowApp',\r\n  setup() {\r\n    const listNodes = readonly([\r\n         {\r\n            name: 'Numeric',\r\n            color: 'gray',\r\n            item: 'Numeric',\r\n            input: 0,\r\n            output: 1\r\n\r\n        },\r\n         {\r\n            name: 'Logic',\r\n            color: 'green',\r\n            item: 'Logic',\r\n            input: 2,\r\n            output: 1\r\n\r\n        },\r\n         {\r\n            name: 'Math',\r\n            color: 'brown',\r\n            item: 'Math',\r\n            input: 2,\r\n            output: 1 \r\n        },\r\n         {\r\n            name: 'IF/ELSE',\r\n            color: 'blue',\r\n            item: 'IFELSE',\r\n            input: 3,\r\n            output: 1\r\n        },\r\n         {\r\n            name: 'FOR',\r\n            color: 'black',\r\n            item: 'FOR',\r\n            input: 3,\r\n            output: 1\r\n         }\r\n    ])\r\n   \r\n    const editor = shallowRef({});\r\n    const dialogVisibleExport = ref(false);\r\n    const dialogVisibleImport = ref(false);\r\n    const dialogVisiblePythonCode = ref(false);\r\n    const dialogDataExport = ref({});\r\n    const dialogDataImport = ref({});\r\n    const dialogPythonCode = ref('');\r\n    const Vue = { version: 3, h, render };\r\n    const internalInstance = getCurrentInstance();\r\n    internalInstance.appContext.app._context.config.globalProperties.$df = editor;\r\n    const drawflowExtend = shallowRef({});\r\n    const consoleData = ref('');\r\n    const requestsData = ref('');\r\n\r\n    function executeNodeCode(){\r\n      drawflowExtend.value.reset();\r\n      consoleData.value = drawflowExtend.value.executeNodeCode(editor.value.export())\r\n    }\r\n\r\n    function pythonCode(){\r\n      drawflowExtend.value.reset();\r\n      dialogPythonCode.value = drawflowExtend.value.makePythonCode(editor.value.export());\r\n      dialogVisiblePythonCode.value = true;\r\n    }\r\n\r\n    function clearEditor(){\r\n      editor.value.import({\"drawflow\": {\"Home\": {\"data\": {}}}});\r\n    }\r\n\r\n    function importEditor() {  \r\n      requestsData.value = \"\"; \r\n      dialogVisibleImport.value = true;\r\n      axios.get('http://localhost:3000/readEditor')\r\n      .then(response => {\r\n        dialogDataImport.value = response.data;\r\n      })\r\n      .catch(error => requestsData.value = error + requestsData.value)\r\n    }\r\n\r\n    function importDataConfirm(){\r\n      if(dialogDataImport.value == 'Empty'){\r\n        requestsData.value = \"Empty\"\r\n        return;\r\n      }\r\n      if(requestsData.value == \"AxiosError: Network Error\" || requestsData.value == \"\"){\r\n        requestsData.value += \" (no editor received)\";\r\n        return;\r\n      }\r\n      editor.value.import(JSON.parse(dialogDataImport.value.replace(\"\\\\\\\"\", \"'\")))\r\n      requestsData.value = \"Imported\"\r\n    }\r\n\r\n    function exportEditor() {\r\n      requestsData.value = \"\";\r\n      dialogDataExport.value = editor.value.export();\r\n      dialogVisibleExport.value = true;\r\n    }\r\n\r\n    function exportDataConfirm(){\r\n      var Editor = JSON.stringify(dialogDataExport.value)\r\n      axios.get('http://localhost:3000/saveEditor?Editor='+Editor)\r\n      .then(response => {\r\n        requestsData.value = response.data;\r\n      })\r\n      .catch(error => requestsData.value = error)\r\n      dialogVisibleExport.value = false;\r\n    }\r\n\r\n    const drag = (ev) => {\r\n      if (ev.type === \"touchstart\") {\r\n        mobile_item_selec = ev.target.closest(\".drag-drawflow\").getAttribute('data-node');\r\n      } else {\r\n      ev.dataTransfer.setData(\"node\", ev.target.getAttribute('data-node'));\r\n      }\r\n    }\r\n    const drop = (ev) => {\r\n      if (ev.type === \"touchend\") {\r\n        var parentdrawflow = document.elementFromPoint( mobile_last_move.touches[0].clientX, mobile_last_move.touches[0].clientY).closest(\"#drawflowApp\");\r\n        if(parentdrawflow != null) {\r\n          addNodeToDrawFlow(mobile_item_selec, mobile_last_move.touches[0].clientX, mobile_last_move.touches[0].clientY);\r\n        }\r\n        mobile_item_selec = '';\r\n      } else {\r\n        ev.preventDefault();\r\n        var data = ev.dataTransfer.getData(\"node\");\r\n        addNodeToDrawFlow(data, ev.clientX, ev.clientY);\r\n      }\r\n\r\n    }\r\n    const allowDrop = (ev) => {\r\n      ev.preventDefault();\r\n    }\r\n\r\n   let mobile_item_selec = '';\r\n   let mobile_last_move = null;\r\n   function positionMobile(ev) {\r\n     mobile_last_move = ev;\r\n   }\r\n\r\n    function addNodeToDrawFlow(name, pos_x, pos_y) {\r\n      pos_x = pos_x * ( editor.value.precanvas.clientWidth / (editor.value.precanvas.clientWidth * editor.value.zoom)) - (editor.value.precanvas.getBoundingClientRect().x * ( editor.value.precanvas.clientWidth / (editor.value.precanvas.clientWidth * editor.value.zoom)));\r\n      pos_y = pos_y * ( editor.value.precanvas.clientHeight / (editor.value.precanvas.clientHeight * editor.value.zoom)) - (editor.value.precanvas.getBoundingClientRect().y * ( editor.value.precanvas.clientHeight / (editor.value.precanvas.clientHeight * editor.value.zoom)));\r\n    \r\n      const nodeSelected = listNodes.find(ele => ele.item == name);\r\n      editor.value.addNode(name, nodeSelected.input,  nodeSelected.output, pos_x, pos_y, name, {}, name, 'vue');\r\n    }\r\n\r\n   onMounted(() => {\r\n      var elements = document.getElementsByClassName('drag-drawflow');\r\n      for (var i = 0; i < elements.length; i++) {\r\n        elements[i].addEventListener('touchend', drop, false);\r\n        elements[i].addEventListener('touchmove', positionMobile, false);\r\n        elements[i].addEventListener('touchstart', drag, false );\r\n      }\r\n      \r\n       const id = document.getElementById(\"drawflow\");\r\n       drawflowExtend.value = new DrawflowExtend();\r\n       editor.value = new DrawflowApp(id, Vue, internalInstance.appContext.app._context);\r\n       editor.value.start();\r\n\r\n       editor.value.registerNode('Numeric', Numeric, {}, {})\r\n       editor.value.registerNode('Logic', Logic, {}, {})\r\n       editor.value.registerNode('Math', Math, {}, {})\r\n       editor.value.registerNode('IFELSE', IFELSE, {}, {})\r\n       editor.value.registerNode('FOR', FOR, {}, {})\r\n\r\n       editor.value.import({\"drawflow\": {\"Home\": {\"data\": {}}}})\r\n  })\r\n\r\n  return {\r\n    exportEditor, importEditor, listNodes, drag, drop, allowDrop, dialogVisibleExport, dialogVisibleImport, dialogDataExport, dialogDataImport, importDataConfirm, exportDataConfirm, clearEditor, pythonCode, dialogPythonCode, dialogVisiblePythonCode, executeNodeCode, consoleData, requestsData\r\n  }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import \"drawflow/dist/drawflow.min.css\";\r\n@import \"../assets/style.css\";\r\n\r\n.name {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-bottom: 1px solid #494949;\r\n}\r\n\r\n.header {\r\n    display: flex;\r\n    justify-content: right;\r\n    align-items: center;\r\n    border-bottom: 1px solid #494949;\r\n}\r\n.container {\r\n    min-height: calc(100vh - 100px);\r\n}\r\n.column {\r\n    border-right: 1px solid #494949;\r\n}\r\n.column ul {\r\n    padding-inline-start: 0px;\r\n    padding: 10px 10px;\r\n \r\n}\r\n.column li {\r\n    background: transparent;\r\n}\r\n\r\n.node {\r\n    border-radius: 8px;\r\n    border: 2px solid #494949;\r\n    display: block;\r\n    height:60px;\r\n    line-height:40px;\r\n    padding: 10px;\r\n    margin: 10px 0px;\r\n    cursor: move;\r\n}\r\n\r\n.console {\r\n    min-width: calc(50vh - 0px);\r\n    max-width: calc(150vh - 0px);\r\n}\r\n\r\n.requests {\r\n    min-width: calc(50vh - 0px);\r\n    max-width: calc(150vh - 0px);\r\n}\r\n\r\n#drawflow {\r\n  width: 100%;\r\n  height: 100%;\r\n  text-align: initial;\r\n  background: #2b2c30;\r\n  background-size: 20px 20px;\r\n  background-image: radial-gradient(#494949 1px, transparent 1px);\r\n}\r\n</style>","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"Numeric\"/>\r\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\r\n        <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n    </el-select>\r\n    <br><br>\r\n        <el-input v-model=\"valueVar\" df-valueVar placeholder=\"Please input\" size=\"small\">\r\n        <template #prepend>Var</template>\r\n        </el-input>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    },\r\n    setup() {\r\n        const el = ref(null);\r\n        const nodeId = ref(0);\r\n        let df = null\r\n        const valueVar = ref('');\r\n        const method = ref('');\r\n        const dataNode = ref({});\r\n        const options = readonly([\r\n            {\r\n                value: 'float',\r\n                label: 'float'\r\n            },\r\n            {\r\n                value: 'int',\r\n                label: 'int'\r\n            }\r\n        ]);\r\n        \r\n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\r\n\r\n        const updateSelect = (value) => {\r\n            dataNode.value.data.method = value;\r\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\r\n        }\r\n        \r\n        onMounted(async () => {\r\n            await nextTick()\r\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\r\n            dataNode.value = df.getNodeFromId(nodeId.value)\r\n            \r\n            valueVar.value = dataNode.value.data.valueVar;\r\n            method.value = dataNode.value.data.method;\r\n        });\r\n        \r\n        return {\r\n            el, valueVar, method, options, updateSelect\r\n        }\r\n    }    \r\n})\r\n</script>","<template>\r\n    <div class=\"header\">{{title}}</div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from 'vue'\r\n\r\nexport default defineComponent({\r\n    props: ['title'],\r\n})\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n    background: #494949;\r\n    margin-top: -15px;\r\n    margin-left: -15px;\r\n    margin-right: -15px;\r\n    padding: 10px 15px;\r\n    margin-bottom: 15px;\r\n}\r\n</style>","import { render } from \"./nodeHeader.vue?vue&type=template&id=0bf9feb6&scoped=true\"\nimport script from \"./nodeHeader.vue?vue&type=script&lang=js\"\nexport * from \"./nodeHeader.vue?vue&type=script&lang=js\"\n\nimport \"./nodeHeader.vue?vue&type=style&index=0&id=0bf9feb6&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0bf9feb6\"]])\n\nexport default __exports__","import { render } from \"./numericNode.vue?vue&type=template&id=354db029\"\nimport script from \"./numericNode.vue?vue&type=script&lang=js\"\nexport * from \"./numericNode.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"Logic\"/>\r\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\r\n        <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n    </el-select>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    },\r\n    setup() {\r\n        const el = ref(null);\r\n        const nodeId = ref(0);\r\n        let df = null\r\n        const method = ref('');\r\n        const dataNode = ref({});\r\n        const options = readonly([\r\n            {\r\n                value: 'is equal to',\r\n                label: 'is equal to'\r\n            },\r\n            {\r\n                value: 'is less than',\r\n                label: 'is less than'\r\n            },\r\n            {\r\n                value: 'is greater than',\r\n                label: 'is greater than'\r\n            },\r\n            {\r\n                value: 'is less or equal than',\r\n                label: 'is less or equal than'\r\n            },\r\n            {\r\n                value: 'is greater or equal than',\r\n                label: 'is greater or equal than'\r\n            }\r\n        ]);\r\n        \r\n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\r\n\r\n        const updateSelect = (value) => {\r\n            dataNode.value.data.method = value;\r\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\r\n        }\r\n        \r\n        onMounted(async () => {\r\n            await nextTick()\r\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\r\n            dataNode.value = df.getNodeFromId(nodeId.value)\r\n            method.value = dataNode.value.data.method;\r\n        });\r\n        \r\n        return {\r\n            el, method, options, updateSelect\r\n        }\r\n    }    \r\n    \r\n})\r\n</script>","import { render } from \"./logicOps.vue?vue&type=template&id=48b738e4\"\nimport script from \"./logicOps.vue?vue&type=script&lang=js\"\nexport * from \"./logicOps.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"Math\"/>\r\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\r\n        <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n    </el-select>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    },\r\n    setup() {\r\n        const el = ref(null);\r\n        const nodeId = ref(0);\r\n        let df = null\r\n        const method = ref('');\r\n        const dataNode = ref({});\r\n        const options = readonly([\r\n            {\r\n                value: 'sum',\r\n                label: 'sum'\r\n            },\r\n            {\r\n                value: 'rest',\r\n                label: 'rest'\r\n            },\r\n            {\r\n                value: 'multiplication',\r\n                label: 'multiplication'\r\n            },\r\n            {\r\n                value: 'divide',\r\n                label: 'divide'\r\n            },\r\n            {\r\n                value: 'pow',\r\n                label: 'pow'\r\n            }\r\n        ]);\r\n        \r\n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\r\n\r\n        const updateSelect = (value) => {\r\n            dataNode.value.data.method = value;\r\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\r\n        }\r\n        \r\n        onMounted(async () => {\r\n            await nextTick()\r\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\r\n            dataNode.value = df.getNodeFromId(nodeId.value)\r\n            \r\n            method.value = dataNode.value.data.method;\r\n        });\r\n        \r\n        return {\r\n            el, method, options, updateSelect\r\n        }\r\n    }    \r\n})\r\n</script>","import { render } from \"./mathOps.vue?vue&type=template&id=aa319b9c\"\nimport script from \"./mathOps.vue?vue&type=script&lang=js\"\nexport * from \"./mathOps.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"IFELSE\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    }\r\n})\r\n</script>","import { render } from \"./ifElse.vue?vue&type=template&id=f092131a\"\nimport script from \"./ifElse.vue?vue&type=script&lang=js\"\nexport * from \"./ifElse.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"FOR\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    }\r\n})\r\n</script>","import { render } from \"./FOR.vue?vue&type=template&id=0fbe8026\"\nimport script from \"./FOR.vue?vue&type=script&lang=js\"\nexport * from \"./FOR.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default class drawflowExtend{\r\n    constructor(){\r\n        this.data = {};\r\n        this.nodesId = [];\r\n        this.nodesIdNames = [];\r\n        this.nodesNames = [];\r\n        this.nodesMethod = [];\r\n        this.nodesVariableType = [];\r\n        this.nodesValueVar = [];\r\n        this.nodesInputs = [];\r\n        this.nodesOutputs = [];\r\n        this.pythonCode = \"new code\"\r\n    }\r\n\r\n    reset(){\r\n        this.data = {};\r\n        this.nodesId = [];\r\n        this.nodesIdNames = [];\r\n        this.nodesNames = [];\r\n        this.nodesMethod = [];\r\n        this.nodesVariableType = [];\r\n        this.nodesValueVar = [];\r\n        this.nodesInputs = [];\r\n        this.nodesOutputs = [];\r\n        this.pythonCode = \"new code\"\r\n    }\r\n\r\n    executeNodeCode(objetoJSON){\r\n        var {bool: bool_gn, Msg: Msg_gn} = this.getNodes(objetoJSON);\r\n        if(bool_gn == false){\r\n            return Msg_gn\r\n        }\r\n        var {bool: bool_vn, Msg: Msg_vn} = this.validateNodes();\r\n        if(bool_vn == false){\r\n            return Msg_vn\r\n        }\r\n        var {bool: bool_io, Msg: Msg_io} = this.validateInputsOutputs();\r\n        if(bool_io == false){\r\n            return Msg_io\r\n        }\r\n\r\n        var {bool: bool_ee, Msg: Msg_ee} = this.executionErrors();\r\n        if(bool_ee == false){\r\n            return Msg_ee\r\n        }\r\n        var Msg_ec = this.executeProgram();\r\n        return Msg_ec\r\n    }\r\n\r\n    makePythonCode(objetoJSON){\r\n        var {bool: bool_gn, Msg: Msg_gn} = this.getNodes(objetoJSON);\r\n        if(bool_gn == false){\r\n            return Msg_gn\r\n        }\r\n        var {bool: bool_vn, Msg: Msg_vn} = this.validateNodes();\r\n        if(bool_vn == false){\r\n            return Msg_vn\r\n        }\r\n        var {bool: bool_io, Msg: Msg_io} = this.validateInputsOutputs();\r\n        if(bool_io == false){\r\n            return Msg_io\r\n        }\r\n\r\n        var {bool: bool_ee, Msg: Msg_ee} = this.executionErrors();\r\n        if(bool_ee == false){\r\n            return Msg_ee\r\n        }\r\n        \r\n        this.getPythonCode();\r\n        return this.pythonCode\r\n    }\r\n\r\n    getNodes(objetoJSON){\r\n        this.data = objetoJSON.drawflow.Home.data\r\n        for (let node in this.data){\r\n            this.nodesId.push(node);\r\n            this.nodesIdNames.push(this.data[node].id);\r\n            this.nodesNames.push(\"\");\r\n            this.nodesMethod.push(\"\");\r\n            this.nodesVariableType.push(\"\");\r\n            this.nodesValueVar.push(\"\");\r\n            this.nodesInputs.push([]);\r\n            this.nodesOutputs.push([]);\r\n        }\r\n        if(this.nodesId.length <= 0){\r\n            return {bool: false, Msg: \"No nodes\"}\r\n        }\r\n        return {bool: true, Msg: \"No problems\"}\r\n    }\r\n\r\n    validateNodes(){\r\n        let valueType = \"\";\r\n        let valuevar = '';\r\n        var variableCheck = \"\";\r\n        for (let nodeId in this.nodesId){\r\n            valueType = '';\r\n            valuevar = '';\r\n            variableCheck = '';\r\n            var thisNode = this.data[this.nodesId[nodeId]];\r\n            this.nodesNames[nodeId] = thisNode.name;\r\n            switch(thisNode.name){\r\n                case 'Numeric':\r\n                    if(Object.prototype.hasOwnProperty.call(thisNode.data, \"data\")){\r\n                        if(Object.prototype.hasOwnProperty.call(thisNode.data.data, \"method\") == true){\r\n                            //this.nodesMethod[nodeId] = thisNode.data.data.method;\r\n                            this.nodesVariableType[nodeId] = thisNode.data.data.method;\r\n                        }\r\n                    } else {\r\n                        return {bool: false, Msg: 'Select variable type of Numeric node'}\r\n                    }\r\n\r\n                    if(Object.prototype.hasOwnProperty.call(thisNode.data,\"valuevar\")){\r\n                        this.nodesValueVar[nodeId] = thisNode.data.valuevar;\r\n                    } else {\r\n                        return {bool: false, Msg: 'Write a value in Numeric Node'}\r\n                    }\r\n                    valuevar = this.nodesValueVar[nodeId];\r\n                    valueType = this.nodesVariableType[nodeId];\r\n            \r\n                    variableCheck = valuevar.match(/^\\d+(\\.\\d+)/g);\r\n                    if(variableCheck != null){\r\n                        if(variableCheck[0].length != valuevar.length){\r\n                            return {bool: false, Msg: 'Variable float in Numeric Node is not correct'};\r\n                        }\r\n                        if(valueType == 'int'){\r\n                            return {bool: false, Msg: 'Variable float in Numeric Node but requires int'};\r\n                        }\r\n                        continue;\r\n                    }\r\n                    \r\n                    variableCheck = valuevar.match(/^\\d+/g);\r\n                    if(variableCheck != null){\r\n                        if(valuevar.includes('.') == true){\r\n                            return {bool: false, Msg: 'Variable float not complete'};\r\n                        }\r\n                        if(variableCheck[0].length != valuevar.length ){\r\n                            return {bool: false, Msg: 'Variable int in Numeric Node is not correct'};\r\n                        }\r\n                        if(valueType == 'float'){\r\n                            return {bool: false, Msg: 'Variable int in Numeric Node but requires float'};\r\n                        }\r\n                        continue;\r\n                    }else{\r\n                        return {bool: false, Msg: \"Variable in Numeric Node is not a number\"};\r\n                    }\r\n\r\n                case 'Logic':\r\n                    if(Object.prototype.hasOwnProperty.call(thisNode.data,\"data\") == true){\r\n                        if(Object.prototype.hasOwnProperty.call(thisNode.data.data,\"method\") == true){\r\n                            this.nodesMethod[nodeId] = thisNode.data.data.method;\r\n                        }\r\n                    } else {\r\n                        return {bool: false, Msg: \"Select operation in Logic node\"};\r\n                    }\r\n                break;\r\n\r\n                case 'Math':\r\n                    if(Object.prototype.hasOwnProperty.call(thisNode.data,\"data\") == true){\r\n                        if(Object.prototype.hasOwnProperty.call(thisNode.data.data,\"method\") == true){\r\n                            this.nodesMethod[nodeId] = thisNode.data.data.method;\r\n                        }\r\n                    } else {\r\n                        return {bool: false, Msg: \"Select operation in Math node\"};\r\n                    }\r\n                break;\r\n\r\n                default: break;\r\n            }\r\n        }\r\n        return {bool: true, Msg: \"Nodes validated\"}\r\n    }\r\n\r\n    validateInputsOutputs(){\r\n        let numberInputsOutputs = 0\r\n        let inputOutputName = ''\r\n        let nodeName = ''\r\n        var inputOutput = ['inputs', 'outputs']\r\n        var hasInputOutput = [false, false]\r\n        var IO = 'inputs'\r\n        for (let nodeId in this.nodesId){\r\n            let thisNode = this.data[this.nodesId[nodeId]];\r\n            hasInputOutput[0] = (Object.keys(thisNode.inputs).length != 0);\r\n            hasInputOutput[1] = (Object.keys(thisNode.outputs).length != 0);\r\n\r\n            for (let i = 0; i < 2; i++){\r\n                IO = inputOutput[i]\r\n                if(hasInputOutput[i]){\r\n                    let inputsOutputs = Object.keys(thisNode[IO])\r\n                    for (let inputOutput in inputsOutputs){\r\n                        numberInputsOutputs = Object.keys(thisNode[IO][inputsOutputs[inputOutput]].connections).length;\r\n                        inputOutputName = JSON.stringify(inputsOutputs[inputOutput]);\r\n                        nodeName = thisNode.name;\r\n                        if(numberInputsOutputs == 0){\r\n                            if(IO == 'outputs' && nodeName == 'Numeric'){\r\n                                return {bool: false, Msg: 'It is missing a connection in ' + inputOutputName + \" from the node \" +  nodeName};\r\n                            }\r\n                            if(IO == 'inputs'){\r\n                                return {bool: false, Msg: 'It is missing a connection in ' + inputOutputName + \" from the node \" +  nodeName};\r\n                            }\r\n                        }\r\n                        if(numberInputsOutputs > 1){\r\n                            if(IO != 'outputs'){\r\n                                return {bool: false, Msg: 'There are too many connections in ' + inputOutputName + \" from the node \" +  nodeName};\r\n                            }\r\n                        }\r\n                        if(IO == 'inputs' && this.nodesNames[nodeId] != 'Numeric'){\r\n                            inputOutputName = inputOutputName.replaceAll('\"', '');\r\n                            var inputNodeName = thisNode[IO][inputOutputName].connections[0].node;\r\n                            this.nodesInputs[nodeId].push(inputNodeName)  \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {bool: true, Msg: 'Inputs and Outputs validated'}\r\n    }\r\n\r\n    executionErrors(){\r\n        var checkNodes = [];\r\n        var checkTypes = [];\r\n        let rootId = this.getRoot();\r\n\r\n        var len = this.nodesId.length;\r\n        for(let i = 0; i < len; i++){\r\n            checkNodes.push(false);\r\n            checkTypes.push('');\r\n        }\r\n\r\n        function check(nodeId, thisNodesId, thisNodesNames, thisNodesInputs){\r\n            if(checkNodes[nodeId] == true){\r\n                return {bool: true, Msg: checkTypes[nodeId]};\r\n            }\r\n            if(thisNodesNames[nodeId] == \"Numeric\"){\r\n                checkNodes[nodeId] = true;\r\n                checkTypes[nodeId] = 'Numeric'\r\n                return {bool: true, Msg: 'Numeric'};\r\n            }\r\n\r\n            var nodeIdName = \"\";\r\n            var newNodeId = 0;\r\n            var inputsTypes = [];\r\n            for (let input in thisNodesInputs[nodeId]){\r\n                nodeIdName = thisNodesInputs[nodeId][input];\r\n                newNodeId = thisNodesId.indexOf(nodeIdName);\r\n                let {bool, Msg} = check(newNodeId, thisNodesId, thisNodesNames, thisNodesInputs);\r\n                if(bool == false){\r\n                    return {bool, Msg};\r\n                } else {\r\n                    inputsTypes.push(Msg);\r\n                }\r\n            }\r\n            checkNodes[nodeId] = true;\r\n\r\n            switch(thisNodesNames[nodeId]){\r\n                case 'Logic':\r\n                    if(inputsTypes[0] != 'Logic' && inputsTypes[1] != 'Logic'){\r\n                        return {bool: true, Msg: 'Logic'};\r\n                    } \r\n                    return {bool: false, Msg: 'Execution Error: not all the inputs have a Numeric outputs'};\r\n                case 'Math':\r\n                    if(inputsTypes[0] != 'Logic' && inputsTypes[1] != 'Logic'){\r\n                        return {bool: true, Msg: 'Math'};\r\n                    }\r\n                    return {bool: false, Msg: 'Execution Error: there are inputs not valid'};\r\n                case 'FOR':\r\n                    if(inputsTypes[0] != 'Logic' && inputsTypes[1] != 'Logic' && inputsTypes[2] == 'Math'){\r\n                        return {bool: true, Msg: \"Numeric\"};\r\n                    }\r\n                    if(inputsTypes[0] == 'Logic'){\r\n                        return {bool: false, Msg: \"Execution Error: there is Logic node in input_1 of the FOR node\"};\r\n                    }\r\n                    if(inputsTypes[1] == 'Logic'){\r\n                        return {bool: false, Msg: \"Execution Error: there is Logic node in input_2 of the FOR node\"};\r\n                    }\r\n                    if(inputsTypes[2] != 'Math'){\r\n                        return {bool: false, Msg: \"Execution Error: a Math node in requiered in input_3 of the FOR node\"};\r\n                    }\r\n                    break;\r\n                case 'IFELSE':\r\n                    if(inputsTypes[0] != 'Logic'){\r\n                        return {bool: false, Msg: 'Execution Error: a Logic value in required in input_1 of the IF/ELSE node'};\r\n                    }\r\n                    if(inputsTypes[1] != 'Logic' && inputsTypes[2] != 'Logic'){\r\n                        return {bool: true, Msg:'Numeric'};\r\n                    }\r\n                    if(inputsTypes[1] == 'Logic' && inputsTypes[2] == 'Logic'){\r\n                        return {bool: true, Msg:'Logic'};\r\n                    }\r\n                    return {bool: true, Msg: 'Execution Error: the inputs of the IF/ELSE node are not the same'};\r\n                default: \r\n                    return {bool: false, Msg: \"Name not recognized\"}\r\n            }\r\n        }\r\n\r\n        let{bool, Msg} = check(rootId, this.nodesId, this.nodesNames, this.nodesInputs);\r\n        if (bool == false){\r\n            return {bool, Msg}\r\n        }\r\n        return {bool: true, Msg: 'No execution errors'}\r\n    }\r\n\r\n    executeProgram(){\r\n        let logicOperators = this.logicOperators;\r\n        let mathOperations = this.mathOperations;\r\n\r\n        function forNode(forinit, forend, number1, number2, method){\r\n            console.log(forinit);\r\n            console.log(forend);\r\n            console.log(number1);\r\n            console.log(number2);\r\n            console.log(method);\r\n            var forresult = number1\r\n            for(let i = forinit; i < forend; i++){\r\n                forresult = mathOperations(number1, number2, method)\r\n                number1 = forresult\r\n            }\r\n            console.log(forresult);\r\n            console.log(String(forresult));\r\n            return forresult.toString();\r\n        }\r\n\r\n        var rootId = this.getRoot();\r\n        \r\n        function check(nodeId, thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, execute){\r\n            if(thisNodesNames[nodeId] == 'Numeric'){\r\n                if(execute == true){\r\n                    return thisNodesValueVar[nodeId];\r\n                }\r\n                return 'Numeric,'+thisNodesValueVar[nodeId] + ',';\r\n            }\r\n\r\n            var nodeIdName = \"\";\r\n            var newNodeId = 0;\r\n            var inputsId = [];\r\n            for (let input in thisNodesInputs[nodeId]){\r\n                nodeIdName = thisNodesInputs[nodeId][input];\r\n                newNodeId = thisNodesId.indexOf(nodeIdName);\r\n                inputsId.push(newNodeId);\r\n            }\r\n\r\n            var number1 = \"\";\r\n            var number2 = \"\";\r\n            var method = \"\";\r\n            var result = \"\";\r\n            var number1Numeric = 0;\r\n            var number2Numeric = 0;\r\n\r\n            switch(thisNodesNames[nodeId]){\r\n                case 'Logic':\r\n                    number1 = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, execute);\r\n                    number2 = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, execute);\r\n                    method = thisNodesMethod[nodeId];\r\n                    if(execute == true){\r\n                        result = logicOperators(parseFloat(number1), parseFloat(number2), method);\r\n                        return result.toString();\r\n                    }\r\n                    return 'Logic,' + number1 + number2 + method + ',';\r\n                case 'Math':\r\n                    number1 = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, execute);\r\n                    number2 = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, execute);\r\n                    method = thisNodesMethod[nodeId];\r\n                    if(execute == true){\r\n                        result = mathOperations(parseFloat(number1), parseFloat(number2), method);\r\n                        return result.toString();\r\n                    }\r\n                    return 'Math,' + number1 + number2 + method + ',';\r\n                case 'FOR':\r\n                    var init = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, true);\r\n                    var end = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, true);\r\n                    var functionMath = check(inputsId[2], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, false);\r\n                    var parameters = functionMath.split(',');\r\n                    //console.log(parameters);\r\n                    number1 = parameters[2];\r\n                    number2 = parameters[4];\r\n                    method = parameters[5];\r\n                    number1Numeric = parseFloat(number1);\r\n                    number2Numeric = parseFloat(number2);\r\n                    if(execute == true){\r\n                        return forNode(Math.round(parseFloat(init)), Math.round(parseFloat(end)), number1Numeric, number2Numeric, method);\r\n                    }\r\n                    return 'FOR,' + init + ',' + end + ',' + number1 + ',' + number2 + ',' + method + ',';\r\n                case 'IFELSE':\r\n                    var condition = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, true);\r\n                    var function1 = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, false);\r\n                    var function2 = check(inputsId[2], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesValueVar, thisNodesMethod, false);\r\n                    var finalFunction = \"\";\r\n\r\n                    finalFunction = condition == \"true\" ? function1 : function2;\r\n                    if(execute == false){\r\n                        return finalFunction;\r\n                    }\r\n\r\n                    parameters = finalFunction.split(',');\r\n                    switch(parameters[0]){\r\n                        case 'Logic':\r\n                            number1 = parameters[2];\r\n                            number2 = parameters[4];\r\n                            method = parameters[5];\r\n                            result = logicOperators(parseFloat(number1), parseFloat(number2), method);\r\n                            return result.toString();\r\n\r\n                        case 'Math':\r\n                            number1 = parameters[2];\r\n                            number2 = parameters[4];\r\n                            method = parameters[5];\r\n                            result = mathOperations(parseFloat(number1), parseFloat(number2), method);\r\n                            return result.toString();\r\n\r\n                        case 'FOR':\r\n                            console.log(parameters);\r\n                            init = Math.round( parseFloat( parameters[1] ) );\r\n                            end = Math.round( parseFloat( parameters[2] ) );\r\n                            number1 = parseFloat( parameters[3] );\r\n                            number2 = parseFloat( parameters[4] );\r\n                            method = parameters[5];\r\n                            return forNode(init, end, number1, number2, method);\r\n                        case 'Numeric':\r\n                            return parameters[1];\r\n                        default: break;\r\n                    }\r\n                    break;\r\n\r\n                default: break;\r\n            }\r\n        }\r\n\r\n        var finalresult = \"\";\r\n        finalresult = check(rootId, this.nodesId, this.nodesNames, this.nodesInputs, this.nodesValueVar, this.nodesMethod, true);\r\n        return finalresult;\r\n    }\r\n\r\n    getPythonCode(){\r\n        let mathOperationsPython = this.mathOperationsPython;\r\n        let logicOperatorsPython = this.logicOperatorsPython;\r\n        let getNamePython = this.getNamePython;\r\n        let indentCode = this.indentCode;\r\n        let rootId = this.getRoot();\r\n \r\n        var numberList = [];\r\n        var numberListValues = [];\r\n\r\n        function check(nodeId, thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, isFor){\r\n            if(thisNodesNames[nodeId] == 'Numeric'){\r\n                var varName = 'N' + thisNodesId[nodeId];\r\n                if(numberList.indexOf(varName) == -1){\r\n                    numberList.push(varName);\r\n                    numberListValues.push(thisNodesValueVar[nodeId]);\r\n                }\r\n                return varName;\r\n            }\r\n\r\n            var nodeIdName = \"\";\r\n            var newNodeId = 0;\r\n            var inputsId = [];\r\n            for (let input in thisNodesInputs[nodeId]){\r\n                nodeIdName = thisNodesInputs[nodeId][input];\r\n                newNodeId = thisNodesId.indexOf(nodeIdName);\r\n                inputsId.push(newNodeId);\r\n            }\r\n\r\n            var number1 = \"\";\r\n            var number2 = \"\";\r\n            var method = \"\";\r\n            var nameLong = \"\";\r\n            var nameShort = \"\";\r\n            var out1 = \"\";\r\n            var out2 = \"\"\r\n            var inpt1 = \"\";\r\n            var inpt2 = \"\";\r\n\r\n            switch(thisNodesNames[nodeId]){\r\n                case 'Logic':\r\n                    number1 = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    number2 = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    method = thisNodesMethod[nodeId];\r\n\r\n                    nameLong = thisNodesNames[inputsId[0]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    if(nameShort != 'N'){\r\n                        inpt1 = number1;\r\n                        number1 = nameShort + thisNodesId[inputsId[0]];  \r\n                    }\r\n\r\n                    nameLong = thisNodesNames[inputsId[1]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    if(nameShort != 'N'){\r\n                        inpt2 = number2;\r\n                        number2 = nameShort + thisNodesId[inputsId[1]];  \r\n                    }\r\n\r\n                    return inpt1 + inpt2 + \"\\nL\" + thisNodesId[nodeId] + \" = ( \" + number1 + ' ' + logicOperatorsPython(method) + ' '+number2 + \" )\"\r\n                case 'Math':\r\n                    var MathStr = \"\";\r\n                    number1 = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    number2 = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    method = thisNodesMethod[nodeId];\r\n   \r\n                    nameLong = thisNodesNames[inputsId[0]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    var out = nameShort + thisNodesId[nodeId];\r\n                    if(nameShort != 'N'){\r\n                        MathStr = MathStr + number2;\r\n                        number1 = out;\r\n                    }\r\n\r\n                    nameLong = thisNodesNames[inputsId[1]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    out = nameShort + thisNodesId[inputsId[1]];\r\n                    if(nameShort != 'N'){\r\n                        MathStr = MathStr + number2;\r\n                        number2 = out;\r\n                    }\r\n\r\n                    if(isFor == true){\r\n                        return number1 + \",\" + number2 + \",\" + method + ',';\r\n                    } else {\r\n                        return MathStr + \"\\nM\" + thisNodesId[nodeId] + \" = \" + number1 + ' ' + mathOperationsPython(method) + ' ' + number2;\r\n                    }\r\n                case 'FOR':\r\n                    var init = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    var end = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    var functionMath = check(inputsId[2], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, true);\r\n                    var operations = functionMath.split(',');\r\n\r\n                    nameLong = thisNodesNames[inputsId[0]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    if(nameShort != 'N'){\r\n                        inpt1 = init;\r\n                        init = nameShort + thisNodesId[inputsId[0]];  \r\n                    }\r\n\r\n                    nameLong = thisNodesNames[inputsId[1]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    if(nameShort != 'N'){\r\n                        inpt2 = end;\r\n                        end = nameShort + thisNodesId[inputsId[1]];  \r\n                    }\r\n\r\n                    return inpt1 + inpt2 + '\\nF' + thisNodesId[nodeId] + \" = \" + operations[0] + '\\nfor _ in range(' + init + ', ' + end + ')' + ':' + '\\n\\tF' + thisNodesId[nodeId] + ' = F' + thisNodesId[nodeId] + ' '+mathOperationsPython(operations[2])+' '+operations[1];\r\n                case 'IFELSE':\r\n                    var IEout = \"\\nIE\" + thisNodesId[nodeId] + \"=\";\r\n                    var condition = check(inputsId[0], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    var function1 = check(inputsId[1], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    var function2 = check(inputsId[2], thisNodesId, thisNodesNames, thisNodesInputs, thisNodesMethod, thisNodesValueVar, false);\r\n                    \r\n                    nameLong = thisNodesNames[inputsId[1]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    out1 = nameShort + thisNodesId[inputsId[1]];\r\n                    out1 = (nameShort == 'N') ? IEout + out1 : function1 + IEout + out1;\r\n\r\n                    nameLong = thisNodesNames[inputsId[2]];\r\n                    nameShort = getNamePython(nameLong);\r\n                    out2 = nameShort + thisNodesId[inputsId[2]];\r\n                    out2 = (nameShort == 'N') ? IEout + out2 : function2 + IEout + out2;\r\n\r\n                    out1 = indentCode(out1);\r\n                    out2 = indentCode(out2);\r\n\r\n                    return condition + \"\\nif(L\" + thisNodesId[inputsId[0]] + \"):\" + out1 + \" \\nelse:\" + out2;\r\n\r\n            }\r\n            return 'Node not found';\r\n        }\r\n\r\n        var execute_root = (this.nodesNames[rootId] == 'FOR') ? true : false;\r\n        let program = check(rootId, this.nodesId, this.nodesNames, this.nodesInputs, this.nodesMethod, this.nodesValueVar, execute_root);\r\n\r\n        var globalVars = \"\";\r\n        for(let pos = 0; pos <  numberList.length; pos++){\r\n            globalVars = globalVars + \"\\n\" + numberList[pos]+\" = \"+numberListValues[pos];\r\n        }\r\n\r\n        var printResult = '\\nprint(' + getNamePython(this.nodesNames[rootId]) + this.nodesId[rootId] + ')';\r\n        program = globalVars + program + printResult;\r\n        this.pythonCode = program;\r\n    }\r\n\r\n    getRoot(){\r\n        var checkNodes = []\r\n        var checkNumbers = []\r\n\r\n        var len = this.nodesId.length;\r\n        for(let i = 0; i < len; i++){\r\n            checkNodes.push(false);\r\n            checkNumbers.push(0);\r\n        }\r\n\r\n        function check(nodeId, thisNodesId, thisNodesNames, thisNodesInputs){\r\n            if(thisNodesNames[nodeId] == \"Numeric\"){\r\n                checkNodes[nodeId] = true;\r\n                checkNumbers[nodeId] = 1;\r\n                return 1;\r\n            }\r\n\r\n            if(checkNodes[nodeId] == true){\r\n                return checkNumbers[nodeId];\r\n            }\r\n\r\n            var nodeIdName = \"\";\r\n            var newNodeId = 0;\r\n            var numberChecks = 0;\r\n            for (let input in thisNodesInputs[nodeId]){\r\n                nodeIdName = thisNodesInputs[nodeId][input];\r\n                newNodeId = thisNodesId.indexOf(nodeIdName);\r\n                numberChecks += check(newNodeId, thisNodesId, thisNodesNames, thisNodesInputs);\r\n            }\r\n\r\n            checkNodes[nodeId] = true;\r\n            checkNumbers[nodeId] = numberChecks;\r\n            return numberChecks;\r\n        }\r\n\r\n        for (let nodeId in this.nodesId){\r\n            check(nodeId, this.nodesId, this.nodesNames, this.nodesInputs);\r\n        }\r\n\r\n        var max = -1;\r\n        var root = -1;\r\n        for (let id in checkNumbers){\r\n            if(checkNumbers[id] > max){\r\n                root = id;\r\n                max = checkNumbers[id]; \r\n            }\r\n        }\r\n\r\n        return root;\r\n    }\r\n\r\n    logicOperators(number1, number2, method){\r\n        switch(method){\r\n            case 'is equal to':\r\n                return number1 == number2;\r\n            case 'is less than':\r\n                return number1 < number2;\r\n            case 'is greater than':\r\n                return number1 > number2;\r\n            case 'is less or equal than':\r\n                return number1 <= number2;\r\n            case 'is greater or equal than':\r\n                return number1 >= number2;\r\n        }\r\n    }\r\n\r\n    mathOperations(number1, number2, method){\r\n        switch(method){\r\n            case 'sum':\r\n                return number1 + number2;\r\n            case 'rest':\r\n                return number1 - number2;\r\n            case 'multiplication':\r\n                return number1 * number2;\r\n            case 'divide':\r\n                return number1 / number2;\r\n            case 'pow':\r\n                return Math.pow(number1, number2);\r\n        }\r\n    }\r\n\r\n    logicOperatorsPython(method){\r\n        switch(method){\r\n            case 'is equal to':\r\n                return '==';\r\n            case 'is less than':\r\n                return \"<\";\r\n            case 'is greater than':\r\n                return \">\";\r\n            case 'is less or equal than':\r\n                return '<=';\r\n            case 'is greater or equal than':\r\n                return '>=';\r\n        }\r\n    }\r\n\r\n    mathOperationsPython(method){\r\n        switch(method){\r\n            case 'sum':\r\n                return '+';\r\n            case 'rest':\r\n                return '-';\r\n            case 'multiplication':\r\n                return '*';\r\n            case 'divide':\r\n                return '/';\r\n            case 'pow':\r\n                return '**';\r\n        }\r\n    }\r\n\r\n    getNamePython(name){\r\n        switch(name){\r\n            case 'Numeric':\r\n                return 'N';\r\n            case 'Logic':\r\n                return 'L'\r\n            case 'FOR':\r\n                return 'F'\r\n            case 'IFELSE':\r\n                return 'IE'\r\n            case 'Math':\r\n                return 'M'\r\n        }\r\n    }\r\n\r\n    indentCode(pythonCode){ \r\n        var pyhtonCode_new = pythonCode.replaceAll(\"\\n\", \"\\n\\t\") \r\n        return pyhtonCode_new\r\n    }\r\n}","import { render } from \"./drawflowApp.vue?vue&type=template&id=7fc0581d&scoped=true\"\nimport script from \"./drawflowApp.vue?vue&type=script&lang=js\"\nexport * from \"./drawflowApp.vue?vue&type=script&lang=js\"\n\nimport \"./drawflowApp.vue?vue&type=style&index=0&id=7fc0581d&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7fc0581d\"]])\n\nexport default __exports__","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=78d71e71&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\r\n\r\nimport ElementPlus from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\nimport * as Icons from '@element-plus/icons'\r\n\r\nimport App from './App.vue'\r\n\r\nconst app = createApp(App)\r\n\r\napp.use(ElementPlus)\r\napp.use(Icons)\r\n\r\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkprueba\"] = self[\"webpackChunkprueba\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6051); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","id","class","_createVNode","_component_el_container","_hoisted_1","_component_el_header","_component_el_button","type","onClick","$setup","_component_el_aside","width","_createElementBlock","_Fragment","_renderList","n","key","draggable","item","onDragstart","$event","style","color","name","_component_el_main","onDrop","onDragover","_component_el_dialog","title","footer","_hoisted_8","_toDisplayString","_hoisted_13","_hoisted_18","ref","_component_nodeHeader","_component_el_select","_ctx","placeholder","onChange","size","_createBlock","_component_el_option","value","label","_hoisted_2","_hoisted_3","_component_el_input","prepend","defineComponent","props","__exports__","components","nodeHeader","setup","el","nodeId","df","valueVar","method","dataNode","options","readonly","getCurrentInstance","appContext","config","globalProperties","$df","updateSelect","data","updateNodeDataFromId","onMounted","async","nextTick","parentElement","slice","getNodeFromId","drawflowExtend","constructor","this","nodesId","nodesIdNames","nodesNames","nodesMethod","nodesVariableType","nodesValueVar","nodesInputs","nodesOutputs","pythonCode","reset","executeNodeCode","objetoJSON","bool","bool_gn","Msg","Msg_gn","getNodes","bool_vn","Msg_vn","validateNodes","bool_io","Msg_io","validateInputsOutputs","bool_ee","Msg_ee","executionErrors","Msg_ec","executeProgram","makePythonCode","getPythonCode","drawflow","Home","node","push","length","valueType","valuevar","variableCheck","thisNode","Object","prototype","hasOwnProperty","call","match","includes","numberInputsOutputs","inputOutputName","nodeName","inputOutput","hasInputOutput","IO","keys","inputs","outputs","i","inputsOutputs","connections","JSON","stringify","replaceAll","inputNodeName","checkNodes","checkTypes","rootId","getRoot","len","check","thisNodesId","thisNodesNames","thisNodesInputs","nodeIdName","newNodeId","inputsTypes","input","indexOf","logicOperators","mathOperations","forNode","forinit","forend","number1","number2","console","log","forresult","String","toString","thisNodesValueVar","thisNodesMethod","execute","inputsId","result","number1Numeric","number2Numeric","parseFloat","init","end","functionMath","parameters","split","Math","round","condition","function1","function2","finalFunction","finalresult","mathOperationsPython","logicOperatorsPython","getNamePython","indentCode","numberList","numberListValues","isFor","varName","nameLong","nameShort","out1","out2","inpt1","inpt2","MathStr","out","operations","IEout","execute_root","program","globalVars","pos","printResult","checkNumbers","numberChecks","max","root","pow","pyhtonCode_new","listNodes","output","editor","shallowRef","dialogVisibleExport","dialogVisibleImport","dialogVisiblePythonCode","dialogDataExport","dialogDataImport","dialogPythonCode","Vue","version","h","render","internalInstance","app","_context","consoleData","requestsData","export","clearEditor","import","importEditor","axios","then","response","catch","error","importDataConfirm","parse","replace","exportEditor","exportDataConfirm","Editor","drag","ev","mobile_item_selec","target","closest","getAttribute","dataTransfer","setData","drop","parentdrawflow","document","elementFromPoint","mobile_last_move","touches","clientX","clientY","addNodeToDrawFlow","preventDefault","getData","allowDrop","positionMobile","pos_x","pos_y","precanvas","clientWidth","zoom","getBoundingClientRect","x","clientHeight","y","nodeSelected","find","ele","addNode","elements","getElementsByClassName","addEventListener","getElementById","DrawflowExtend","DrawflowApp","start","registerNode","Numeric","Logic","IFELSE","FOR","createApp","App","use","ElementPlus","Icons","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}