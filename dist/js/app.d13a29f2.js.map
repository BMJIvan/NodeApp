{"version":3,"file":"js/app.d13a29f2.js","mappings":"0LAIIA,EAAAA,EAAAA,GAAiB,UAAb,YAAQ,K,WAK2C,qB,WACL,oB,WACC,gB,WACC,iB,WACA,iB,0BAsBtDA,EAAAA,EAAAA,GAAyB,YAAnB,gBAAY,K,GACPC,GAAG,c,GAENC,MAAM,iB,WAC0C,U,WACe,W,UAOrEF,EAAAA,EAAAA,GAAkB,YAAZ,SAAK,K,GACAC,GAAG,c,GAENC,MAAM,iB,WACsC,U,WACoC,W,UAO1FF,EAAAA,EAAAA,GAAkB,YAAZ,SAAK,K,GACRC,GAAG,c,GAEEC,MAAM,iB,WACsC,U,WACoC,W,oNA9D1FC,EAAAA,EAAAA,IAceC,EAAA,M,kBAbb,IAEe,EAFfD,EAAAA,EAAAA,IAEeC,EAAA,CAFDF,MAAM,QAAM,C,kBACxB,IAAiB,CAAjBG,K,OAGFF,EAAAA,EAAAA,IAQeC,EAAA,M,kBAPX,IAMY,EANZD,EAAAA,EAAAA,IAMYG,EAAA,CANDJ,MAAM,UAAQ,C,kBACvB,IAAgF,EAAhFC,EAAAA,EAAAA,IAAgFI,EAAA,CAArEC,KAAK,UAAWC,QAAOC,EAAAA,iBAAlC,C,kBAAmD,IAAiB,M,KAApE,gBACAP,EAAAA,EAAAA,IAA0EI,EAAA,CAA/DC,KAAK,UAAWC,QAAOC,EAAAA,YAAlC,C,kBAA8C,IAAgB,M,KAA9D,gBACAP,EAAAA,EAAAA,IAAuEI,EAAA,CAA5DC,KAAK,UAAWC,QAAOC,EAAAA,aAAlC,C,kBAA+C,IAAY,M,KAA3D,gBACAP,EAAAA,EAAAA,IAAyEI,EAAA,CAA9DC,KAAK,UAAWC,QAAOC,EAAAA,cAAlC,C,kBAAgD,IAAa,M,KAA7D,gBACAP,EAAAA,EAAAA,IAAyEI,EAAA,CAA9DC,KAAK,UAAWC,QAAOC,EAAAA,cAAlC,C,kBAAgD,IAAa,M,KAA7D,kB,yBAKRP,EAAAA,EAAAA,IAaeC,EAAA,M,kBAZb,IAWe,EAXfD,EAAAA,EAAAA,IAWeC,EAAA,CAXDF,MAAM,aAAW,C,kBAC7B,IAMW,EANXC,EAAAA,EAAAA,IAMWQ,EAAA,CANDC,MAAM,QAAQV,MAAM,UAA9B,C,kBACI,IAIK,EAJLF,EAAAA,EAAAA,GAIK,0BAHDa,EAAAA,EAAAA,IAEKC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAFWL,EAAAA,WAALM,K,WAAXH,EAAAA,EAAAA,IAEK,MAFuBI,IAAKD,EAAGE,UAAU,OAAQ,YAAWF,EAAEG,KAAOC,YAAS,eAAEV,EAAAA,KAAKW,IAASnB,MAAM,iBAAzG,EACIF,EAAAA,EAAAA,GAAuE,OAAlEE,MAAM,OAAQoB,OAAK,uBAAiBN,EAAEO,WAA3C,QAAwDP,EAAEQ,MAAI,IADlE,oB,OAKRrB,EAAAA,EAAAA,IAEUsB,EAAA,M,kBADN,IAA4E,EAA5EzB,EAAAA,EAAAA,GAA4E,OAAvEC,GAAG,WAAYyB,OAAI,eAAEhB,EAAAA,KAAKW,IAAUM,WAAQ,eAAEjB,EAAAA,UAAUW,KAA7D,Y,yBAKRlB,EAAAA,EAAAA,IAUYyB,EAAA,C,WATDlB,EAAAA,wB,qCAAAA,EAAAA,wBAAuBW,GAAEQ,MAAM,aAAajB,MAAM,OAD7D,CAIakB,QAAM,SACf,IAGO,EAHP9B,EAAAA,EAAAA,GAGO,OAHP,EAGO,EAFLG,EAAAA,EAAAA,IAAsEI,EAAA,CAA1DE,QAAK,eAAEC,EAAAA,yBAAuB,IAA1C,C,kBAAoD,IAAM,M,OAC1DP,EAAAA,EAAAA,IAAsFI,EAAA,CAA3EC,KAAK,UAAWC,QAAK,eAAEC,EAAAA,yBAAuB,IAAzD,C,kBAAmE,IAAO,M,6BAL9E,IAAyB,CAAzBqB,GACA/B,EAAAA,EAAAA,GAA4D,aAAvDA,EAAAA,EAAAA,GAAiD,OAAjD,GAAiDgC,EAAAA,EAAAA,IAAzBtB,EAAAA,kBAAgB,Q,KAH/C,mBAYAP,EAAAA,EAAAA,IAUcyB,EAAA,C,WATDlB,EAAAA,oB,qCAAAA,EAAAA,oBAAmBW,GAAEQ,MAAM,SAASjB,MAAM,OADvD,CAIekB,QAAM,SACf,IAGO,EAHP9B,EAAAA,EAAAA,GAGO,OAHP,EAGO,EAFLG,EAAAA,EAAAA,IAAkEI,EAAA,CAAtDE,QAAK,eAAEC,EAAAA,qBAAmB,IAAtC,C,kBAAgD,IAAM,M,OACtDP,EAAAA,EAAAA,IAAuGI,EAAA,CAA5FC,KAAK,UAAWC,QAAK,gBAAEC,EAAAA,qBAAmB,EAAUA,EAAAA,uBAA/D,C,kBAAoF,IAAO,M,6BAL/F,IAAkB,CAAlBuB,GACAjC,EAAAA,EAAAA,GAA4D,aAAvDA,EAAAA,EAAAA,GAAiD,OAAjD,GAAiDgC,EAAAA,EAAAA,IAAzBtB,EAAAA,kBAAgB,Q,KAHjD,mBAYAP,EAAAA,EAAAA,IAUYyB,EAAA,C,WATDlB,EAAAA,oB,uCAAAA,EAAAA,oBAAmBW,GAAEQ,MAAM,SAASjB,MAAM,OADrD,CAIakB,QAAM,SACf,IAGO,EAHP9B,EAAAA,EAAAA,GAGO,OAHP,EAGO,EAFLG,EAAAA,EAAAA,IAAkEI,EAAA,CAAtDE,QAAK,eAAEC,EAAAA,qBAAmB,IAAtC,C,kBAAgD,IAAM,M,OACtDP,EAAAA,EAAAA,IAAuGI,EAAA,CAA5FC,KAAK,UAAWC,QAAK,kBAAEC,EAAAA,qBAAmB,EAAUA,EAAAA,uBAA/D,C,kBAAoF,IAAO,M,6BAL/F,IAAkB,CAAlBwB,GACAlC,EAAAA,EAAAA,GAA2C,IAA3C,GAA2CgC,EAAAA,EAAAA,IAAtBtB,EAAAA,kBAAgB,M,KAHvC,mBAYEP,EAAAA,EAAAA,IAGeC,EAAA,M,kBAFb,IAAqE,EAArED,EAAAA,EAAAA,IAAqEC,EAAA,CAAvDF,MAAM,WAAS,C,kBAAC,IAAS,UAAT,aAAS8B,EAAAA,EAAAA,IAAEtB,EAAAA,aAAW,M,OACpDP,EAAAA,EAAAA,IAAyEC,EAAA,CAA3DF,MAAM,YAAU,C,kBAAC,IAAU,UAAV,cAAU8B,EAAAA,EAAAA,IAAEtB,EAAAA,cAAY,M,gBAFzD,I,yCCpEOyB,IAAI,M,GAWTnC,EAAAA,EAAAA,GAAI,mB,GAAAA,EAAAA,EAAAA,GAAI,mB,WAEe,O,gJAbvBa,EAAAA,EAAAA,IAeM,MAfN,EAeM,EAdFV,EAAAA,EAAAA,IAA8BiC,EAAA,CAAjBP,MAAM,aACnB1B,EAAAA,EAAAA,IAQQkC,EAAA,C,WARYC,EAAAA,O,qCAAAA,EAAAA,OAAMjB,GAAEkB,YAAY,SAAUC,SAAQF,EAAAA,aAAcG,KAAK,QAAQ,gBAArF,C,kBAEA,IAAuB,gBADvB5B,EAAAA,EAAAA,IAMYC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALGuB,EAAAA,SAARnB,K,WADPuB,EAAAA,EAAAA,IAMYC,EAAA,CAJX1B,IAAKE,EAAKyB,MACVC,MAAO1B,EAAK0B,MACZD,MAAOzB,EAAKyB,OAJb,sC,KADA,6BASJE,EAAIC,GACA5C,EAAAA,EAAAA,IAEW6C,EAAA,C,WAFQV,EAAAA,S,qCAAAA,EAAAA,SAAQjB,GAAE,iBAAYkB,YAAY,eAAeE,KAAK,SAAzE,CACWQ,SAAO,SAAC,IAAG,M,KADtB,mBAZJ,K,SCAK/C,MAAM,U,0CAAXW,EAAAA,EAAAA,IAAmC,MAAnC,GAAmCmB,EAAAA,EAAAA,IAAbM,EAAAA,OAAK,GAK/B,OAAeY,EAAAA,EAAAA,IAAgB,CAC3BC,MAAO,CAAC,W,UCAZ,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAEzF,QFcA,GAAeF,EAAAA,EAAAA,IAAgB,CAC3BG,WAAY,CACRC,WAAUA,GAEdC,QACI,MAAMC,GAAKrB,EAAAA,EAAAA,IAAI,MACTsB,GAAStB,EAAAA,EAAAA,IAAI,GACnB,IAAIuB,EAAK,KACT,MAAMC,GAAWxB,EAAAA,EAAAA,IAAI,IACfyB,GAASzB,EAAAA,EAAAA,IAAI,IACb0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf2B,GAAUC,EAAAA,EAAAA,IAAS,CACrB,CACInB,MAAO,QACPC,MAAO,SAEX,CACID,MAAO,MACPC,MAAO,SAIfa,GAAKM,EAAAA,EAAAA,MAAqBC,WAAWC,OAAOC,iBAAiBC,IAAIxB,MAEjE,MAAMyB,EAAgBzB,IAClBiB,EAASjB,MAAM0B,KAAKV,OAAShB,EAC7Bc,EAAGa,qBAAqBd,EAAOb,MAAOiB,EAASjB,QAanD,OATA4B,EAAAA,EAAAA,KAAUC,gBACAC,EAAAA,EAAAA,MACNjB,EAAOb,MAAQY,EAAGZ,MAAM+B,cAAcA,cAAc1E,GAAG2E,MAAM,GAC7Df,EAASjB,MAAQc,EAAGmB,cAAcpB,EAAOb,OAEzCe,EAASf,MAAQiB,EAASjB,MAAM0B,KAAKX,SACrCC,EAAOhB,MAAQiB,EAASjB,MAAM0B,KAAKV,UAGhC,CACHJ,KAAIG,WAAUC,SAAQE,UAASO,mBG1D3C,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,SCNSlC,IAAI,M,yHAATtB,EAAAA,EAAAA,IAWM,MAXN,EAWM,EAVFV,EAAAA,EAAAA,IAA4BiC,EAAA,CAAfP,MAAM,WACnB1B,EAAAA,EAAAA,IAQQkC,EAAA,C,WARYC,EAAAA,O,qCAAAA,EAAAA,OAAMjB,GAAEkB,YAAY,SAAUC,SAAQF,EAAAA,aAAcG,KAAK,QAAQ,gBAArF,C,kBAEA,IAAuB,gBADvB5B,EAAAA,EAAAA,IAMYC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALGuB,EAAAA,SAARnB,K,WADPuB,EAAAA,EAAAA,IAMYC,EAAA,CAJX1B,IAAKE,EAAKyB,MACVC,MAAO1B,EAAK0B,MACZD,MAAOzB,EAAKyB,OAJb,sC,KADA,8BAFJ,KAkBJ,OAAeM,EAAAA,EAAAA,IAAgB,CAC3BG,WAAY,CACRC,WAAUA,GAEdC,QACI,MAAMC,GAAKrB,EAAAA,EAAAA,IAAI,MACTsB,GAAStB,EAAAA,EAAAA,IAAI,GACnB,IAAIuB,EAAK,KACT,MAAME,GAASzB,EAAAA,EAAAA,IAAI,IACb0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf2B,GAAUC,EAAAA,EAAAA,IAAS,CACrB,CACInB,MAAO,cACPC,MAAO,eAEX,CACID,MAAO,eACPC,MAAO,gBAEX,CACID,MAAO,kBACPC,MAAO,mBAEX,CACID,MAAO,wBACPC,MAAO,yBAEX,CACID,MAAO,2BACPC,MAAO,8BAIfa,GAAKM,EAAAA,EAAAA,MAAqBC,WAAWC,OAAOC,iBAAiBC,IAAIxB,MAEjE,MAAMyB,EAAgBzB,IAClBiB,EAASjB,MAAM0B,KAAKV,OAAShB,EAC7Bc,EAAGa,qBAAqBd,EAAOb,MAAOiB,EAASjB,QAWnD,OAPA4B,EAAAA,EAAAA,KAAUC,gBACAC,EAAAA,EAAAA,MACNjB,EAAOb,MAAQY,EAAGZ,MAAM+B,cAAcA,cAAc1E,GAAG2E,MAAM,GAC7Df,EAASjB,MAAQc,EAAGmB,cAAcpB,EAAOb,OACzCgB,EAAOhB,MAAQiB,EAASjB,MAAM0B,KAAKV,UAGhC,CACHJ,KAAII,SAAQE,UAASO,mBC/DjC,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,Q,UCNSlC,IAAI,M,0HAATtB,EAAAA,EAAAA,IAWM,MAXN,GAWM,EAVFV,EAAAA,EAAAA,IAA2BiC,EAAA,CAAdP,MAAM,UACnB1B,EAAAA,EAAAA,IAQQkC,EAAA,C,WARYC,EAAAA,O,qCAAAA,EAAAA,OAAMjB,GAAEkB,YAAY,SAAUC,SAAQF,EAAAA,aAAcG,KAAK,QAAQ,gBAArF,C,kBAEA,IAAuB,gBADvB5B,EAAAA,EAAAA,IAMYC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IALGuB,EAAAA,SAARnB,K,WADPuB,EAAAA,EAAAA,IAMYC,EAAA,CAJX1B,IAAKE,EAAKyB,MACVC,MAAO1B,EAAK0B,MACZD,MAAOzB,EAAKyB,OAJb,sC,KADA,8BAFJ,KAkBJ,QAAeM,EAAAA,EAAAA,IAAgB,CAC3BG,WAAY,CACRC,WAAUA,GAEdC,QACI,MAAMC,GAAKrB,EAAAA,EAAAA,IAAI,MACTsB,GAAStB,EAAAA,EAAAA,IAAI,GACnB,IAAIuB,EAAK,KACT,MAAME,GAASzB,EAAAA,EAAAA,IAAI,IACb0B,GAAW1B,EAAAA,EAAAA,IAAI,IACf2B,GAAUC,EAAAA,EAAAA,IAAS,CACrB,CACInB,MAAO,MACPC,MAAO,OAEX,CACID,MAAO,OACPC,MAAO,QAEX,CACID,MAAO,iBACPC,MAAO,kBAEX,CACID,MAAO,SACPC,MAAO,UAEX,CACID,MAAO,MACPC,MAAO,SAIfa,GAAKM,EAAAA,EAAAA,MAAqBC,WAAWC,OAAOC,iBAAiBC,IAAIxB,MAEjE,MAAMyB,EAAgBzB,IAClBiB,EAASjB,MAAM0B,KAAKV,OAAShB,EAC7Bc,EAAGa,qBAAqBd,EAAOb,MAAOiB,EAASjB,QAYnD,OARA4B,EAAAA,EAAAA,KAAUC,gBACAC,EAAAA,EAAAA,MACNjB,EAAOb,MAAQY,EAAGZ,MAAM+B,cAAcA,cAAc1E,GAAG2E,MAAM,GAC7Df,EAASjB,MAAQc,EAAGmB,cAAcpB,EAAOb,OAEzCgB,EAAOhB,MAAQiB,EAASjB,MAAM0B,KAAKV,UAGhC,CACHJ,KAAII,SAAQE,UAASO,mBChEjC,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCNSlC,IAAI,M,0EAATtB,EAAAA,EAAAA,IAEM,MAFN,GAEM,EADFV,EAAAA,EAAAA,IAA6BiC,EAAA,CAAhBP,MAAM,YADvB,KASJ,QAAeqB,EAAAA,EAAAA,IAAgB,CAC3BG,WAAY,CACRC,WAAUA,KCPlB,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,UCNSnB,IAAI,M,0EAATtB,EAAAA,EAAAA,IAEM,MAFN,GAEM,EADFV,EAAAA,EAAAA,IAA0BiC,EAAA,CAAbP,MAAM,SADvB,KASJ,QAAeqB,EAAAA,EAAAA,IAAgB,CAC3BG,WAAY,CACRC,WAAUA,KCPlB,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS,MAEpE,U,QCPe,MAAMwB,GACjBC,cACIC,KAAKC,QAAU,UACfD,KAAKE,MAAQ,GACbF,KAAKV,KAAO,GACZU,KAAKG,WAAa,WAGtBC,gBAAgBC,GACZ,IAAKC,KAAMC,EAASC,IAAKC,GAAUT,KAAKU,SAASL,GACjD,GAAc,GAAXE,EACC,OAAOE,EAEX,IAAKH,KAAMK,EAASH,IAAKI,GAAUZ,KAAKa,gBACxC,GAAc,GAAXF,EACC,OAAOC,EAEX,IAAKN,KAAMQ,EAASN,IAAKO,GAAUf,KAAKgB,wBACxC,GAAc,GAAXF,EACC,OAAOC,EAGX,IAAKT,KAAMW,EAAST,IAAKU,GAAWlB,KAAKmB,aACzC,GAAc,GAAXF,EACC,OAAOC,EAGX,IAAKZ,KAAMc,EAASZ,IAAKa,GAAUrB,KAAKsB,kBACxC,GAAc,GAAXF,EACC,OAAOC,EAEX,IAAIE,EAASvB,KAAKwB,iBAClB,OAAOD,EAGXE,eAAepB,GACX,IAAKC,KAAMC,EAASC,IAAKC,GAAUT,KAAKU,SAASL,GACjD,GAAc,GAAXE,EACC,OAAOE,EAEX,IAAKH,KAAMK,EAASH,IAAKI,GAAUZ,KAAKa,gBACxC,GAAc,GAAXF,EACC,OAAOC,EAEX,IAAKN,KAAMQ,EAASN,IAAKO,GAAUf,KAAKgB,wBACxC,GAAc,GAAXF,EACC,OAAOC,EAGX,IAAKT,KAAMW,EAAST,IAAKU,GAAWlB,KAAKmB,aACzC,GAAc,GAAXF,EACC,OAAOC,EAGX,IAAKZ,KAAMc,EAASZ,IAAKa,GAAUrB,KAAKsB,kBACxC,OAAc,GAAXF,EACQC,GAGXrB,KAAK0B,gBACE1B,KAAKG,YAGhBO,SAASL,GACLL,KAAKV,KAAOe,EAAWsB,SAASC,KAAKtC,KACrCU,KAAKE,MAAQ,GACb,IAAI2B,EAAI,EACR,IAAK,IAAIC,KAAQ9B,KAAKV,KAClBU,KAAKE,MAAM2B,GAAKC,EAChBD,IAEJ,OAAG7B,KAAKE,MAAM6B,QAAU,EACb,CAACzB,MAAM,EAAOE,IAAK,YAEvB,CAACF,MAAM,EAAME,IAAK,eAG7BK,gBACI,IAAIjC,EAAS,GACToD,EAAW,GACf,IAAIC,EAAe,GACnB,IAAK,IAAIH,KAAQ9B,KAAKE,MAAM,CACxBtB,EAAS,GACToD,EAAW,GACX,IAAIE,EAAWlC,KAAKV,KAAKU,KAAKE,MAAM4B,IACpC,GAAuC,aAAnCK,KAAKC,UAAWF,EAAS1F,MAAuB,CAChD,IAAK2F,KAAKC,UAAUF,EAAS5C,MAAM+C,SAAS,UAIxC,MAAO,CAAC/B,MAAM,EAAOE,IAAK,wCAE9B,GALI5B,EAASuD,KAAKC,UAAUF,EAAS5C,KAAKA,KAAKV,QAAQ0D,QAAQ,KAAM,KAKlEH,KAAKC,UAAUF,EAAS5C,MAAM+C,SAAS,YAItC,MAAO,CAAC/B,MAAM,EAAOE,IAAK,iCAI9B,GAPIwB,EAAWG,KAAKC,UAAUF,EAAS5C,KAAKiD,UAAUD,QAAQ,KAAM,IAMpEL,EAAeD,EAASQ,MAAM,gBACX,MAAhBP,EAAqB,CACpB,GAAGA,EAAa,GAAGF,QAAUC,EAASD,OAClC,MAAO,CAACzB,MAAM,EAAOE,IAAK,iDAE9B,GAAa,OAAV5B,EACC,MAAO,CAAC0B,MAAM,EAAOE,IAAK,mDAE9B,SAIJ,GADAyB,EAAeD,EAASQ,MAAM,SACX,MAAhBP,EAAqB,CACpB,GAA6B,GAA1BD,EAASK,SAAS,KACjB,MAAO,CAAC/B,MAAM,EAAOE,IAAK,+BAE9B,GAAGyB,EAAa,GAAGF,QAAUC,EAASD,OAClC,MAAO,CAACzB,MAAM,EAAOE,IAAK,+CAE9B,GAAa,SAAV5B,EACC,MAAO,CAAC0B,MAAM,EAAOE,IAAK,mDAE9B,SAEA,MAAO,CAACF,MAAM,EAAOE,IAAK,4CAGlC,GAAuC,UAAnC2B,KAAKC,UAAWF,EAAS1F,OACyB,GAA/C2F,KAAKC,UAAUF,GAAUG,SAAS,UACjC,MAAO,CAAC/B,MAAM,EAAOE,IAAK,iCAGlC,GAAuC,WAAnC2B,KAAKC,UAAWF,EAAS1F,OACyB,GAA/C2F,KAAKC,UAAUF,GAAUG,SAAS,UAEjC,MAAO,CAAC/B,MAAM,EAAOE,IAAK,kCAItC,MAAO,CAACF,MAAM,EAAME,IAAK,mBAG7BQ,wBACI,IAAIyB,EAAa,EACbC,EAAkB,GAClBC,EAAW,GACf,IAAIC,EAAc,CAAC,SAAU,WACzBC,EAAiB,EAAC,GAAO,GACzBC,EAAK,SACT,IAAK,IAAIhB,KAAQ9B,KAAKE,MAAM,CACxB,IAAIgC,EAAWlC,KAAKV,KAAKU,KAAKE,MAAM4B,IACpCe,EAAe,GAA6C,GAAvCE,OAAOC,KAAKd,EAASe,QAAQlB,OAClDc,EAAe,GAA8C,GAAxCE,OAAOC,KAAKd,EAASgB,SAASnB,OAEnD,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IAEnB,GADAiB,EAAKF,EAAYf,GACdgB,EAAehB,GAAG,CACjB,IAAIsB,EAAeJ,OAAOC,KAAKd,EAASY,IACxC,IAAK,IAAIM,KAAeD,EAAa,CAIjC,GAHAV,EAAaM,OAAOC,KAAKd,EAASY,GAAIK,EAAaC,IAAcC,aAAatB,OAC9EW,EAAkBP,KAAKC,UAAUe,EAAaC,IAC9CT,EAAWT,EAAS1F,KACH,GAAdiG,GACW,WAANK,GAAiC,WAAZH,EACrB,MAAO,CAACrC,MAAM,EAAOE,IAAK,iCAAmCkC,EAAkB,kBAAqBC,GAG5G,GAAGF,EAAa,GACH,WAANK,EACC,MAAO,CAACxC,MAAM,EAAOE,IAAK,qCAAuCkC,EAAkB,kBAAqBC,KAOhI,MAAO,CAACrC,MAAM,EAAME,IAAK,gCAG7BW,aACI,IAAImC,EAAa,GACbC,EAAc,GACdC,EAAW,GACXC,EAAiB,EAErBD,EAASF,GAAcC,EACvBvD,KAAK0D,KAAO,CAAC,CAAC,GAAI,KAElB,IAAIC,EAAcZ,OAAOC,KAAKhD,KAAKV,MAAMyC,OACzC,IAAI,IAAI6B,EAAW,EAAGA,EAAWD,EAAaC,IAAW,CACrD,IAAI9B,EAAOiB,OAAOC,KAAKhD,KAAKV,MAAMsE,GAClC,GAAGb,OAAOc,OAAO7D,KAAKV,KAAKwC,GAAMmB,QAAQlB,OAAS,EAAE,CAChD,IAAI+B,EAAef,OAAOC,KAAKhD,KAAKV,KAAKwC,GAAMmB,QAAQlB,OACvDuB,EAAa,GACbC,EAAc,GACdC,EAAW,GACX,IAAI,IAAIO,EAAQ,EAAGA,EAAQD,EAAcC,IAAQ,CAC7C,IAAIC,EAAoBjB,OAAOc,OAAO7D,KAAKV,KAAKwC,GAAMmB,QAAQc,GAAOV,YAAYtB,OACxD,GAArBiC,IACAV,EAAanB,KAAKC,UAAUN,GAAMQ,QAAQ,KAAM,KAChDiB,EAAYU,KAAK9B,KAAKC,UAAUW,OAAOc,OAAOd,OAAOc,OAAO7D,KAAKV,KAAKwC,GAAMmB,QAAQc,GAAOV,aAAa,GAAGvB,MAAMQ,QAAQ,KAAM,MAGpIiB,EAAYxB,OAAS,IACpByB,EAASF,GAAcC,EACvBvD,KAAK0D,KAAKD,GAAkBD,EAC5BC,MAIZ,MAAsB,IAAnBzD,KAAK0D,KAAK,GAAG,IAAsC,GAA1B1D,KAAK0D,KAAK,GAAG,GAAG3B,OACjC,CAACzB,MAAM,EAAOE,IAAK,gCAEnB,CAACF,MAAM,EAAME,IAAK,iCAIjCc,kBACI,IAAI4C,EAAY,GACZC,EAAiB,GACjBC,EAAU,GACVzB,EAAW,GACX0B,EAAY,GACZV,EAAc3D,KAAK0D,KAAK3B,OACxBuC,EAAY,GAEhB,IAAK,IAAIzC,EAAI,EAAGA,EAAI8B,EAAa9B,IAC7BuC,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,MAAM7B,IAAIS,QAAQ,KAAM,IAClEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,KAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC9FgC,EAAUzC,GAAKc,EACfuB,EAAUrC,IAAK,EACfsC,EAAetC,GAAK7B,KAAKuE,QAAQ5B,EAAU3C,KAAKE,MAAOF,KAAKV,MAGhE,SAASkF,EAAMC,EAAef,GAC1B,IAAIT,EAAS,GACTyB,EAAeJ,EAAUK,QAAQF,GACrC,IAAqB,GAAjBC,EAEA,MAAO,CAACpE,MAAM,EAAME,IAAK,WAGzB,GAA8B,GAA3B0D,EAAUQ,GACT,MAAO,CAACpE,MAAM,EAAME,IAAK2D,EAAeO,IAG5C,IAAIN,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKU,GAAMgB,IAAepC,QAAQ,KAAM,IACxEwB,EAAef,OAAOc,OAAOH,EAAKU,IAAU,GAAGrC,OAEnD,IAAK,IAAI6C,EAAI,EAAGA,EAAId,EAAcc,IAAI,CAClCP,EAAYtB,OAAOc,OAAOH,EAAKU,IAAU,GAAGQ,GAC5C,IAAI,KAACtE,EAAD,IAAOE,GAAOgE,EAAMH,EAAWX,GACnC,GAAW,GAARpD,EACC,MAAO,CAACA,OAAME,OAGdyC,EAAOgB,KAAKzD,GAGpB0D,EAAUQ,IAAgB,EAC1B,IAAIG,EAAkC,OAAb5B,EAAO,IAA8B,WAAbA,EAAO,IAAkC,QAAbA,EAAO,GAChF6B,EAAkC,OAAb7B,EAAO,IAA8B,WAAbA,EAAO,IAAkC,QAAbA,EAAO,GAEpF,OAAOkB,EAAeO,IAClB,IAAK,QACD,OAAwB,GAApBG,GAAkD,GAApBC,EACvB,CAACxE,MAAM,EAAME,IAAK,SAGlB,CAACF,MAAM,EAAOE,IAAK,8EAElC,IAAK,OACD,OAAGqE,GAAoBC,EACZ,CAACxE,MAAM,EAAOE,IAAK,6DAGnB,CAACF,MAAM,EAAME,IAAK,QAEjC,IAAK,MACD,MAAgB,QAAbyC,EAAO,GACC,CAAC3C,MAAM,EAAOE,IAAK,sDAGnB,CAACF,MAAM,EAAME,IAAK,OAEjC,IAAK,SACD,MAAgB,SAAbyC,EAAO,GACC,CAAC3C,MAAM,EAAOE,IAAK,yEAG9BqE,EAAkC,OAAb5B,EAAO,IAA8B,WAAbA,EAAO,IAAkC,QAAbA,EAAO,GAChF6B,EAAkC,OAAb7B,EAAO,IAA8B,WAAbA,EAAO,IAAkC,QAAbA,EAAO,GACvD,GAApB4B,GAAkD,GAApBC,GAC/BX,EAAeO,GAAgB,UACxB,CAACpE,MAAM,EAAME,IAAK,YAE1ByC,EAAO,IAAMA,EAAO,GACZ,CAAC3C,MAAM,EAAOE,IAAK,sDAG1B2D,EAAeO,GAAgB,QACxB,CAACpE,MAAM,EAAME,IAAK,WAGrC,MAAO,CAACF,MAAM,EAAOE,IAAK,mEAGlC,IAAK,IAAIqB,EAAI,EAAGA,EAAI8B,EAAa9B,IAAI,CACjCuC,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,MAAM7B,IAAIS,QAAQ,KAAM,IAClEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,KAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC9F,IAAG,KAAChC,EAAD,IAAOE,GAAOgE,EAAM7B,EAAU3C,KAAK0D,MACtC,GAAY,GAARpD,EACA,MAAO,CAACA,OAAME,OAGtB,MAAO,CAACF,MAAM,EAAME,IAAK,uBAG7BgB,iBACI,IAAI0C,EAAY,GACZC,EAAiB,GACjBC,EAAU,GACVzB,EAAW,GACX0B,EAAY,GACZV,EAAc3D,KAAK0D,KAAK3B,OACxBuC,EAAY,GAEhB,IAAIS,EAAe/E,KAAKgF,UAExB,IAAK,IAAInD,EAAI,EAAGA,EAAI8B,EAAa9B,IAC7BuC,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,MAAM7B,IAAIS,QAAQ,KAAM,IAClEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,KAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC9FgC,EAAUzC,GAAKc,EACfuB,EAAUrC,IAAK,EACfsC,EAAetC,GAAK7B,KAAKuE,QAAQ5B,EAAU3C,KAAKE,MAAOF,KAAKV,MAGhE,IAAI2F,EAAWjF,KAAKiF,SAChBV,EAAUvE,KAAKuE,QACfW,EAAiBlF,KAAKkF,eACtBC,EAAiBnF,KAAKmF,eACtBC,EAAYpF,KAAKoF,UAErB,SAASC,EAAQC,EAASC,EAAQC,EAASC,EAAS7G,GAChD,IAAI8G,EAAYF,EAChB,IAAI,IAAI3D,EAAIyD,EAASzD,EAAI0D,EAAQ1D,IAC7B6D,EAAYR,EAAeM,EAASC,EAAS7G,GAC7C4G,EAAUE,EAEd,OAAOA,EAGX,SAASlB,EAAMC,EAAef,EAAMpE,EAAMY,EAAOyF,GAC7C,GAA0C,WAAvCpB,EAAQE,EAAevE,EAAOZ,GAC7B,OAAc,GAAXqG,EACQV,EAASR,EAAevE,EAAOZ,GAE/B,WAAa2F,EAASR,EAAevE,EAAOZ,GAAQ,IAInE,IAAIsG,EAAiB,GACjBlB,EAAeJ,EAAUK,QAAQF,GACjCL,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKU,GAAMgB,IAAepC,QAAQ,KAAM,IACxEwB,EAAef,OAAOc,OAAOH,EAAKU,IAAU,GAAGrC,OAEnD,IAAK,IAAI6C,EAAI,EAAGA,EAAId,EAAcc,IAC9BP,EAAYtB,OAAOc,OAAOH,EAAKU,IAAU,GAAGQ,GAC5CgB,EAAe3B,KAAKI,GAExB,IAAImB,EAAU,GACVC,EAAU,GACV7G,EAAS,GACTiH,EAAS,GACTC,EAAiB,EACjBC,EAAiB,EACjBC,EAAW,EACXC,EAAS,EACTC,EAAc,EACdC,EAAW,GACf,OAAOhC,EAAeO,IAClB,IAAK,QAID,OAHAc,EAAUhB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,EAAOyF,GACtDF,EAAUjB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,EAAOyF,GACtD/G,EAASwG,EAAUX,EAAevE,EAAOZ,GAC3B,GAAXqG,GACCE,EAASV,EAAgBiB,WAAWZ,GAAUY,WAAWX,GAAU7G,GAC5DiH,EAAOQ,YAEP,SAAWb,EAAU,IAAMC,EAAU,IAAM7G,EAAS,IAEnE,IAAK,OAID,OAHA4G,EAAUhB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,EAAOyF,GACtDF,EAAUjB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,EAAOyF,GACtD/G,EAASwG,EAAUX,EAAevE,EAAOZ,GAC3B,GAAXqG,GACCE,EAASX,EAAgBkB,WAAWZ,GAAUY,WAAWX,GAAU7G,GAC5DiH,EAAOQ,YAEP,QAAUb,EAAUC,EAAU7G,EAAS,IAEtD,IAAK,MACD,IAAI0H,EAAO9B,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACnDqG,EAAM/B,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GAClDsG,EAAehC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GAC/DgG,EAAcM,EAAa7B,QAAQ,KACnCwB,EAAWK,EAAaC,UAAU,EAAGP,GAErCF,EAAW,EACXC,EAAS,EAET,IAAIS,EAAaF,EAAaG,MAAM,KAMpC,OALAnB,EAAUkB,EAAW,GACrBjB,EAAUiB,EAAW,GACrB9H,EAAS8H,EAAW,GACpBZ,EAAiBM,WAAWZ,GAC5BO,EAAiBK,WAAWX,GACd,GAAXE,EACQN,EAAQuB,KAAKC,MAAMT,WAAWE,IAAQM,KAAKC,MAAMT,WAAWG,IAAOT,EAAgBC,EAAgBnH,GAAQyH,WAE3G,OAAOC,EAAK,IAAIC,EAAI,IAAIf,EAAQ,IAAIC,EAAQ,IAAI7G,EAAO,IAEtE,IAAK,SAED,IAAIkI,EAAYtC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACxD6G,EAAYvC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACxD8G,EAAYxC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACxD+G,EAAgB,GAQpB,GALIA,EADY,QAAbH,EACiBC,EAEAC,EAGN,GAAXrB,EACC,OAAOsB,EAOP,GALAf,EAAce,EAActC,QAAQ,KACpCwB,EAAWc,EAAcR,UAAU,EAAGP,GAEtCF,EAAW,EACXC,EAAS,EACM,WAAZE,EAGC,OAFAH,EAAWiB,EAActC,QAAQ,KACjCsB,EAASgB,EAActC,QAAQ,MAAMqB,GAC9BiB,EAAcR,UAAUT,EAAUC,GAG7C,IAAIiB,EAAY,GAEhB,GAAe,OAAZf,EAAkB,CACjBH,EAAWiB,EAActC,QAAQ,KAEjC,IAAK,IAAI9C,EAAI,EAAGA,EAAI,EAAGA,IACnBoE,EAASgB,EAActC,QAAQ,MAAMqB,GACrCkB,EAAUjD,KAAKgD,EAAcR,UAAUT,EAAUC,IACjDD,EAAWC,EAaf,GAVIH,EADoB,OAArBF,EAAe,GACGuB,SAASD,EAAU,IAEnBd,WAAWc,EAAU,IAGtCnB,EADoB,OAArBH,EAAe,GACGuB,SAASD,EAAU,IAEnBd,WAAWc,EAAU,IAG3B,SAAZf,EAEC,OADAiB,QAAQC,IAAKlC,EAAgBiB,WAAWc,EAAU,IAAKd,WAAWc,EAAU,IAAMA,EAAU,KACrF/B,EAAgBW,EAAgBC,EAAiBmB,EAAU,IAAKb,WAE3E,GAAe,QAAZF,EACC,OAAOjB,EAAgBY,EAAgBC,EAAiBmB,EAAU,IAAKb,WAI/E,GAAe,OAAZF,EAAkB,CACjBH,EAAWiB,EAActC,QAAQ,KACjC,IAAK,IAAI9C,EAAI,EAAGA,EAAI,EAAGA,IACnBoE,EAASgB,EAActC,QAAQ,MAAMqB,GACrCkB,EAAUjD,KAAKgD,EAAcR,UAAUT,EAAUC,IACjDD,EAAWC,EAEf,OAAOZ,EAAQuB,KAAKC,MAAMT,WAAWc,EAAU,KAAMN,KAAKC,MAAMT,WAAWc,EAAU,KAAMd,WAAWc,EAAU,IAAKd,WAAWc,EAAU,IAAKA,EAAU,KAIzK,MAAO,iBAGX,IAAII,EAAehD,EAAU6C,SAASpC,IACtC,IAAIwC,EAAc,GAElB,OADAA,EAAc/C,EAAM8C,EAActH,KAAK0D,KAAM1D,KAAKV,KAAMU,KAAKE,OAAO,GAC7DqH,EAGX7F,gBACI,IAAIwC,EAAY,GACZC,EAAiB,GACjBL,EAAe,EACfM,EAAU,GACVzB,EAAW,GACX0B,EAAY,GACZV,EAAc3D,KAAK0D,KAAK3B,OACxBuC,EAAY,GACZkD,EAAa,GACbC,EAAmB,GAEvB,IAAI1C,EAAe/E,KAAKgF,UAExB,IAAK,IAAInD,EAAI,EAAGA,EAAI8B,EAAa9B,IAC7BuC,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,MAAM7B,IAAIS,QAAQ,KAAM,IAClEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,KAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC9FgC,EAAUzC,GAAKc,EACfuB,EAAUrC,IAAK,EACfsC,EAAetC,GAAK7B,KAAKuE,QAAQ5B,EAAU3C,KAAKE,MAAOF,KAAKV,MAGhE,IAAI2F,EAAWjF,KAAKiF,SAChBV,EAAUvE,KAAKuE,QACfmD,EAAuB1H,KAAK0H,qBAC5BC,EAAuB3H,KAAK2H,qBAC5BvC,EAAYpF,KAAKoF,UACjBwC,EAAgB5H,KAAK4H,cACrBC,EAAa7H,KAAK6H,WAEtB,SAASrD,EAAMC,EAAef,EAAMpE,EAAMY,EAAO4H,GAC7C,GAA0C,WAAvCvD,EAAQE,EAAevE,EAAOZ,GAAmB,CAChD,IAAIyI,EAAa,IAAMtD,EAKvB,OAJsC,GAAnC+C,EAAW7C,QAAQoD,KAClBP,EAAWvD,KAAK8D,GAChBN,EAAiBxD,KAAKgB,EAASR,EAAevE,EAAOZ,KAElDyI,EAGX,IAAInC,EAAiB,GACjBlB,EAAeJ,EAAUK,QAAQF,GACrCL,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKU,GAAMgB,IAAepC,QAAQ,KAAM,IACxEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKU,EAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IACzFwB,EAAef,OAAOc,OAAOH,EAAKU,IAAU,GAAGrC,OAE/C,IAAK,IAAI6C,EAAI,EAAGA,EAAId,EAAcc,IAC9BP,EAAYtB,OAAOc,OAAOH,EAAKU,IAAU,GAAGQ,GAC5CgB,EAAe3B,KAAKI,GAExB,IAAImB,EAAU,GACVC,EAAU,GACV7G,EAAS,GACToJ,EAAW,GACXC,EAAY,GAEhB,OAAO9D,EAAeO,IAClB,IAAK,QAID,OAHAc,EAAUhB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACtDuF,EAAUjB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACtDtB,EAASwG,EAAUX,EAAevE,EAAOZ,GAClC,MAAMmF,EAAc,QAAQe,EAAQ,IAAImC,EAAqB/I,GAAQ,IAAI6G,EAAQ,KAC5F,IAAK,OACD,IAAIyC,EAAU,GACd1C,EAAUhB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACtDuF,EAAUjB,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACtDtB,EAASwG,EAAUX,EAAevE,EAAOZ,GAEzC0I,EAAWzD,EAAQqB,EAAe,GAAI1F,EAAOZ,GAC7C2I,EAAYL,EAAcI,GAC1B,IAAIG,EAAMF,EAAYrC,EAAe,GAcrC,MAbgB,KAAbqC,IACCC,GAAoB1C,EACpBA,EAAU2C,GAGdH,EAAWzD,EAAQqB,EAAe,GAAI1F,EAAOZ,GAC7C2I,EAAYL,EAAcI,GAC1BG,EAAMF,EAAYrC,EAAe,GACjB,KAAbqC,IACCC,GAAoBzC,EACpBA,EAAU0C,GAGJ,GAAPL,EACQtC,EAAQ,IAAIC,EAAQ,IAAI7G,EAAO,IAE/BsJ,EAAQ,MAAMzD,EAAc,MAAMe,EAAQ,IAAIkC,EAAqB9I,GAAQ,IAAI6G,EAE9F,IAAK,MACD,IAAIa,EAAO9B,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACnDqG,EAAM/B,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GAClDsG,EAAehC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GAC3DkI,EAAa5B,EAAaG,MAAM,KACpC,MAAO,MAAMlC,EAAc,MAAM2D,EAAW,GAAG,oBAAoB9B,EAAK,KAAKC,EAAtE,UAA0F9B,EAAc,OAAOA,EAAc,IAAIiD,EAAqBU,EAAW,IAAI,IAAIA,EAAW,GAE/L,IAAK,SACL,IAAIC,EAAQ,OAAO5D,EAAc,IAC7BqC,EAAYtC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACxD6G,EAAYvC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GACxD8G,EAAYxC,EAAMoB,EAAe,GAAIlC,EAAMpE,EAAMY,GAAO,GAC5D8H,EAAWzD,EAAQqB,EAAe,GAAI1F,EAAOZ,GAC7C2I,EAAYL,EAAcI,GAC1B,IAAIM,EAAOL,EAAYrC,EAAe,GAGlC0C,EADY,KAAbL,EACQI,EAAQC,EAERvB,EAAYsB,EAAQC,EAG/BN,EAAWzD,EAAQqB,EAAe,GAAI1F,EAAOZ,GAC7C2I,EAAYL,EAAcI,GAC1B,IAAIO,EAAON,EAAYrC,EAAe,GAWtC,GARI2C,EADY,KAAbN,EACQI,EAAQE,EAERvB,EAAYqB,EAAQE,EAG/BD,EAAOT,EAAWS,GAClBC,EAAOV,EAAWU,GAER,GAAPT,EAGE,CACD,IAAIU,EAAa1B,EAAU,SAASlB,EAAe,GAAG,KAAK0C,EAAK,WAAWC,EAC3E,OAAOC,EAEX,MAEJ,MAAO,iBAGX,IAAIlB,EAAehD,EAAU6C,SAASpC,IACtC,IAAI0D,EAAU,GACdA,EAAUjE,EAAM8C,EAActH,KAAK0D,KAAM1D,KAAKV,KAAMU,KAAKE,OAAO,GAChE,IAAIwI,EAAmBlB,EAAWzF,OAC9B4G,EAAmB,GACvB,IAAI,IAAIC,EAAM,EAAGA,EAAOF,EAAkBE,IACtCD,EAAmBA,EAAmB,KAAOnB,EAAWoB,GAAK,MAAMnB,EAAiBmB,GAExF,IAAIrB,EAAcoB,EAAmBF,EACrClB,EAAcA,EAAYjF,QAAQ,KAAM,IACxC,IAAI0F,EAAWzD,EAAQ+C,EAActH,KAAKE,MAAOF,KAAKV,MAClD2I,EAAYL,EAAcI,GAC9BhI,KAAKG,WAAaoH,EAAc,WAAWU,EAAUX,EAAa,IAGtEtC,UACI,IAAId,EAAY,GACZC,EAAiB,GACjB0E,EAAmB,GACnBzE,EAAU,GACVzB,EAAW,GACXgB,EAAc3D,KAAK0D,KAAK3B,OACxBuC,EAAY,GAEhB,IAAK,IAAIzC,EAAI,EAAGA,EAAI8B,EAAa9B,IAC7BuC,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,MAAM7B,IAAIS,QAAQ,KAAM,IAClEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,KAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC9FgC,EAAUzC,GAAKc,EACfuB,EAAUrC,IAAK,EACfsC,EAAetC,GAAK7B,KAAKuE,QAAQ5B,EAAU3C,KAAKE,MAAOF,KAAKV,MAGhE,SAASkF,EAAMC,EAAef,GAC1B,IAAIgB,EAAeJ,EAAUK,QAAQF,GACrC,IAAqB,GAAjBC,EACA,OAAO,EAGP,GAA8B,GAA3BR,EAAUQ,GACT,OAAOmE,EAAiBnE,GAE5B,IAAIN,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKU,GAAMgB,IAAepC,QAAQ,KAAM,IACxEwB,EAAef,OAAOc,OAAOH,EAAKU,IAAU,GAAGrC,OAC/C+G,EAAe,EACfzE,EAAY,GAChB,IAAK,IAAIO,EAAI,EAAGA,EAAId,EAAcc,IAC9BP,EAAYtB,OAAOc,OAAOH,EAAKU,IAAU,GAAGQ,GAC5CkE,GAAgBtE,EAAMH,EAAWX,GAKrC,OAFAmF,EAAiBnE,GAAgBoE,EACjC5E,EAAUQ,IAAgB,EACnBmE,EAAiBnE,GAIhC,IAAK,IAAI7C,EAAI,EAAGA,EAAI8B,EAAa9B,IAC7BuC,EAAUjC,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,MAAM7B,IAAIS,QAAQ,KAAM,IAClEK,EAAWR,KAAKC,UAAUW,OAAOC,KAAKhD,KAAK0D,KAAKU,IAAU,IAAI9B,QAAQ,KAAM,IAAIA,QAAQ,KAAM,IAC9FkC,EAAM7B,EAAU3C,KAAK0D,MAGzB,IAAIqF,EAAM,EACNnF,GAAY,EACZoF,EAAgB,EACpB,IAAK,IAAIC,KAAUJ,EACfjF,IACGiF,EAAiBI,GAAUF,IAC1BA,EAAMF,EAAiBI,GACvBD,EAAgBpF,GAGxB,OAAOoF,EAGXzE,QAAQ2E,EAAUhJ,EAAOZ,GACrB,IAAK,IAAIwC,KAAQ5B,EAAM,CACnB,IAAIgC,EAAW5C,EAAKY,EAAM4B,IACtBqH,EAAehH,KAAKC,UAAUF,EAASjH,IAC3C,GAAIkO,GAAgBD,EAChB,OAAO/G,KAAKC,UAAUF,EAAS1F,MAAM8F,QAAQ,KAAM,IAG3D,MAAO,GAGX2C,SAASiE,EAAUhJ,EAAOZ,GACtB,IAAK,IAAIwC,KAAQ5B,EAAM,CACnB,IAAIgC,EAAW5C,EAAKY,EAAM4B,IACtBqH,EAAehH,KAAKC,UAAUF,EAASjH,IAC3C,GAAIkO,GAAgBD,GACsC,WAAnD/G,KAAKC,UAAUF,EAAS1F,MAAM8F,QAAQ,KAAM,IAC3C,OAAOH,KAAKC,UAAUF,EAAS5C,KAAKiD,UAAUD,QAAQ,KAAM,IAKxE,OADA8E,QAAQC,IAAI,kCACL,GAGXjC,UAAU8D,EAAUhJ,EAAOZ,GACvB,IAAK,IAAIwC,KAAQ5B,EAAM,CACnB,IAAIgC,EAAW5C,EAAKY,EAAM4B,IACtBqH,EAAehH,KAAKC,UAAUF,EAASjH,IAC3C,GAAIkO,GAAgBD,EAAS,CACzB,IAAI1M,EAAO2F,KAAKC,UAAUF,EAAS1F,MAAM8F,QAAQ,KAAM,IACvD,GAAW,QAAR9F,GAA0B,SAARA,EACjB,OAAO2F,KAAKC,UAAUF,EAAS5C,KAAKA,KAAKV,QAAQ0D,QAAQ,KAAM,KAK3E,OADA8E,QAAQC,IAAI,kCACL,GAGXlC,eAAeK,EAASC,EAAS7G,GAC7B,OAAOA,GACH,IAAK,cACD,OAAO4G,GAAWC,EACtB,IAAK,eACD,OAAOD,EAAUC,EACrB,IAAK,kBACD,OAAOD,EAAUC,EACrB,IAAK,wBACD,OAAOD,GAAWC,EACtB,IAAK,2BACD,OAAOD,GAAWC,GAI9BP,eAAeM,EAASC,EAAS7G,GAC7B,OAAOA,GACH,IAAK,MACD,OAAO4G,EAAUC,EACrB,IAAK,OACD,OAAOD,EAAUC,EACrB,IAAK,iBACD,OAAOD,EAAUC,EACrB,IAAK,SACD,OAAOD,EAAUC,EACrB,IAAK,MACD,OAAOmB,KAAKwC,IAAI5D,EAASC,IAIrCkC,qBAAqB/I,GACjB,OAAOA,GACH,IAAK,cACD,MAAO,KACX,IAAK,eACD,MAAO,IACX,IAAK,kBACD,MAAO,IACX,IAAK,wBACD,MAAO,KACX,IAAK,2BACD,MAAO,MAInB8I,qBAAqB9I,GACjB,OAAOA,GACH,IAAK,MACD,MAAO,IACX,IAAK,OACD,MAAO,IACX,IAAK,iBACD,MAAO,IACX,IAAK,SACD,MAAO,IACX,IAAK,MACD,MAAO,MAInBgJ,cAAcpL,GACV,OAAOA,GACH,IAAK,UACD,MAAO,IACX,IAAK,QACD,MAAO,IACX,IAAK,MACD,MAAO,IACX,IAAK,SACD,MAAO,KACX,IAAK,OACD,MAAO,KAInBqL,WAAW1H,GACP,IAAIkJ,EAAiBlJ,EAAWmJ,WAAW,KAAM,QACjD,OAAOD,G,0BbluBf,IACE7M,KAAM,cACN+B,QACE,MAAMgL,GAAYxK,EAAAA,EAAAA,IAAS,CACtB,CACGvC,KAAM,UACND,MAAO,OACPJ,KAAM,UACN4H,MAAO,EACPyF,OAAQ,GAGX,CACGhN,KAAM,QACND,MAAO,QACPJ,KAAM,QACN4H,MAAO,EACPyF,OAAQ,GAGX,CACGhN,KAAM,OACND,MAAO,QACPJ,KAAM,OACN4H,MAAO,EACPyF,OAAQ,GAEX,CACGhN,KAAM,UACND,MAAO,OACPJ,KAAM,SACN4H,MAAO,EACPyF,OAAQ,GAGX,CACGhN,KAAM,MACND,MAAO,QACPJ,KAAM,MACN4H,MAAO,EACPyF,OAAQ,KAIVC,GAASC,EAAAA,EAAAA,IAAW,IACpBC,GAAsBxM,EAAAA,EAAAA,KAAI,GAC1ByM,GAAsBzM,EAAAA,EAAAA,KAAI,GAC1B0M,GAA0B1M,EAAAA,EAAAA,KAAI,GAC9B2M,GAAmB3M,EAAAA,EAAAA,IAAI,IACvB4M,GAAmB5M,EAAAA,EAAAA,IAAI,IACvB6M,GAAmB7M,EAAAA,EAAAA,IAAI,IACvB8M,EAAM,CAAEC,QAAS,EAAGC,EAAd,IAAiBC,OAAMA,EAAAA,IAC7BC,GAAmBrL,EAAAA,EAAAA,MACzBqL,EAAiBpL,WAAWqL,IAAIC,SAASrL,OAAOC,iBAAiBC,IAAMqK,EACvE,MAAM3J,GAAiB4J,EAAAA,EAAAA,IAAW,IAC5Bc,GAAcrN,EAAAA,EAAAA,IAAI,IAClBsN,GAAetN,EAAAA,EAAAA,IAAI,IAEzB,SAASiD,IACPoK,EAAY5M,MAAQkC,EAAelC,MAAMwC,gBAAgBqJ,EAAO7L,MAAM8M,UAMxE,SAASvK,IAEP6J,EAAiBpM,MAAQkC,EAAelC,MAAM6D,eAAegI,EAAO7L,MAAM8M,UAC1Eb,EAAwBjM,OAAQ,EAGlC,SAAS+M,IACPlB,EAAO7L,MAAMgN,OAAO,CAAC,SAAY,CAAC,KAAQ,CAAC,KAAQ,OAIrD,SAASC,IAIPjB,EAAoBhM,OAAQ,EAC5BkN,KAAAA,IAAU,oCACTC,MAAKC,IACJjB,EAAiBnM,MAAQoN,EAAS1L,QAEnC2L,OAAMC,GAAST,EAAa7M,MAAQsN,IAGvC,SAASC,IACsB,SAA1BpB,EAAiBnM,OAIpB6L,EAAO7L,MAAMgN,OAAOzI,KAAKiJ,MAAMrB,EAAiBnM,MAAM0E,QAAQ,MAAQ,OACtEmI,EAAa7M,MAAQ,YAJnB6M,EAAa7M,MAAQ,QAOzB,SAASyN,IACPvB,EAAiBlM,MAAQ6L,EAAO7L,MAAM8M,SACtCf,EAAoB/L,OAAQ,EAG9B,SAAS0N,IACP,IAAIC,EAASpJ,KAAKC,UAAU0H,EAAiBlM,OAC7CkN,KAAAA,IAAU,2CAA2CS,GACpDR,MAAKC,IACJP,EAAa7M,MAAQoN,EAAS1L,QAE/B2L,OAAMC,GAAST,EAAa7M,MAAQsN,IACrCvB,EAAoB/L,OAAQ,EAG9B,MAAM4N,EAAQC,IACI,eAAZA,EAAGjQ,KACLkQ,EAAoBD,EAAGE,OAAOC,QAAQ,kBAAkBC,aAAa,aAEvEJ,EAAGK,aAAaC,QAAQ,OAAQN,EAAGE,OAAOE,aAAa,eAGnDG,EAAQP,IACZ,GAAgB,aAAZA,EAAGjQ,KAAqB,CAC1B,IAAIyQ,EAAiBC,SAASC,iBAAkBC,EAAiBC,QAAQ,GAAGC,QAASF,EAAiBC,QAAQ,GAAGE,SAASX,QAAQ,gBAC7G,MAAlBK,GACDO,EAAkBd,EAAmBU,EAAiBC,QAAQ,GAAGC,QAASF,EAAiBC,QAAQ,GAAGE,SAExGb,EAAoB,OACf,CACLD,EAAGgB,iBACH,IAAInN,EAAOmM,EAAGK,aAAaY,QAAQ,QACnCF,EAAkBlN,EAAMmM,EAAGa,QAASb,EAAGc,WAIrCI,EAAalB,IACjBA,EAAGgB,kBAGN,IAAIf,EAAoB,GACpBU,EAAmB,KACvB,SAASQ,EAAenB,GACtBW,EAAmBX,EAGpB,SAASe,EAAkBhQ,EAAMqQ,EAAOC,GACtCD,EAAQA,GAAUpD,EAAO7L,MAAMmP,UAAUC,aAAevD,EAAO7L,MAAMmP,UAAUC,YAAcvD,EAAO7L,MAAMqP,OAAUxD,EAAO7L,MAAMmP,UAAUG,wBAAwBC,GAAM1D,EAAO7L,MAAMmP,UAAUC,aAAevD,EAAO7L,MAAMmP,UAAUC,YAAcvD,EAAO7L,MAAMqP,OACjQH,EAAQA,GAAUrD,EAAO7L,MAAMmP,UAAUK,cAAgB3D,EAAO7L,MAAMmP,UAAUK,aAAe3D,EAAO7L,MAAMqP,OAAUxD,EAAO7L,MAAMmP,UAAUG,wBAAwBG,GAAM5D,EAAO7L,MAAMmP,UAAUK,cAAgB3D,EAAO7L,MAAMmP,UAAUK,aAAe3D,EAAO7L,MAAMqP,OAErQ,MAAMK,EAAe/D,EAAUgE,MAAKC,GAAOA,EAAIrR,MAAQK,IACvDiN,EAAO7L,MAAM6P,QAAQjR,EAAM8Q,EAAavJ,MAAQuJ,EAAa9D,OAAQqD,EAAOC,EAAOtQ,EAAM,GAAIA,EAAM,OA0BvG,OAtBCgD,EAAAA,EAAAA,KAAU,KAEP,IADA,IAAIkO,EAAWxB,SAASyB,uBAAuB,iBACtC9L,EAAI,EAAGA,EAAI6L,EAAS3L,OAAQF,IACnC6L,EAAS7L,GAAG+L,iBAAiB,WAAY5B,GAAM,GAC/C0B,EAAS7L,GAAG+L,iBAAiB,YAAahB,GAAgB,GAC1Dc,EAAS7L,GAAG+L,iBAAiB,aAAcpC,GAAM,GAGlD,MAAMvQ,EAAKiR,SAAS2B,eAAe,YACnC/N,EAAelC,MAAQ,IAAIkQ,GAC3BrE,EAAO7L,MAAQ,IAAImQ,IAAJ,CAAgB9S,EAAIgP,EAAKI,EAAiBpL,WAAWqL,IAAIC,UACxEd,EAAO7L,MAAMoQ,QAEbvE,EAAO7L,MAAMqQ,aAAa,UAAWC,EAAS,GAAI,IAClDzE,EAAO7L,MAAMqQ,aAAa,QAASE,EAAO,GAAI,IAC9C1E,EAAO7L,MAAMqQ,aAAa,OAAQrH,GAAM,GAAI,IAC5C6C,EAAO7L,MAAMqQ,aAAa,SAAUG,GAAQ,GAAI,IAChD3E,EAAO7L,MAAMqQ,aAAa,MAAOI,GAAK,GAAI,IAE1C5E,EAAO7L,MAAMgN,OAAO,CAAC,SAAY,CAAC,KAAQ,CAAC,KAAQ,UAGjD,CACLS,eAAcR,eAActB,YAAWiC,OAAMQ,OAAMW,YAAWhD,sBAAqBC,sBAAqBE,mBAAkBC,mBAAkBoB,oBAAmBG,oBAAmBX,cAAaxK,aAAY6J,mBAAkBH,0BAAyBzJ,kBAAiBoK,cAAaC,iBAKtRnL,OACE,MAAO,CACLgP,YAAa,KAIjBC,QAAS,CACPC,iBACEpH,QAAQC,IAAI,yBc7QlB,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,SAAS+C,GAAQ,CAAC,YAAY,qBAEzF,U,mECJA,MAAM,GAAc,GAEpB,UCEA,MAAME,IAAMmE,EAAAA,EAAAA,IAAUC,IAEtBpE,GAAIqE,IAAIC,EAAAA,GACRtE,GAAIqE,IAAIE,GAERvE,GAAIwE,MAAM,UCbNC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,QAIfJ,EAAoBQ,EAAIF,E,WCzBxB,IAAIG,EAAW,GACfT,EAAoBU,EAAI,SAAS7J,EAAQ8J,EAAUC,EAAIC,GACtD,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASlO,EAAI,EAAGA,EAAI4N,EAAS1N,OAAQF,IAAK,CACrC8N,EAAWF,EAAS5N,GAAG,GACvB+N,EAAKH,EAAS5N,GAAG,GACjBgO,EAAWJ,EAAS5N,GAAG,GAE3B,IAJA,IAGImO,GAAY,EACPpL,EAAI,EAAGA,EAAI+K,EAAS5N,OAAQ6C,MACpB,EAAXiL,GAAsBC,GAAgBD,IAAa9M,OAAOC,KAAKgM,EAAoBU,GAAGO,OAAM,SAAShU,GAAO,OAAO+S,EAAoBU,EAAEzT,GAAK0T,EAAS/K,OAC3J+K,EAASO,OAAOtL,IAAK,IAErBoL,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACbP,EAASS,OAAOrO,IAAK,GACrB,IAAIsO,EAAIP,SACET,IAANgB,IAAiBtK,EAASsK,IAGhC,OAAOtK,EAzBNgK,EAAWA,GAAY,EACvB,IAAI,IAAIhO,EAAI4N,EAAS1N,OAAQF,EAAI,GAAK4N,EAAS5N,EAAI,GAAG,GAAKgO,EAAUhO,IAAK4N,EAAS5N,GAAK4N,EAAS5N,EAAI,GACrG4N,EAAS5N,GAAK,CAAC8N,EAAUC,EAAIC,I,cCJ/Bb,EAAoBhT,EAAI,SAASqT,GAChC,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,WAAa,OAAOhB,EAAO,YAC3B,WAAa,OAAOA,GAErB,OADAL,EAAoBsB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,G,cCLRpB,EAAoBsB,EAAI,SAASlB,EAASoB,GACzC,IAAI,IAAIvU,KAAOuU,EACXxB,EAAoByB,EAAED,EAAYvU,KAAS+S,EAAoByB,EAAErB,EAASnT,IAC5E8G,OAAO2N,eAAetB,EAASnT,EAAK,CAAE0U,YAAY,EAAMC,IAAKJ,EAAWvU,M,cCJ3E+S,EAAoB6B,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO9Q,MAAQ,IAAI+Q,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,kBAAXC,OAAqB,OAAOA,QALjB,G,cCAxBjC,EAAoByB,EAAI,SAASS,EAAKC,GAAQ,OAAOpO,OAAOqO,UAAUC,eAAe9B,KAAK2B,EAAKC,I,cCC/FnC,EAAoBmB,EAAI,SAASf,GACX,qBAAXkC,QAA0BA,OAAOC,aAC1CxO,OAAO2N,eAAetB,EAASkC,OAAOC,YAAa,CAAE3T,MAAO,WAE7DmF,OAAO2N,eAAetB,EAAS,aAAc,CAAExR,OAAO,K,cCAvD,IAAI4T,EAAkB,CACrB,IAAK,GAaNxC,EAAoBU,EAAE9K,EAAI,SAAS6M,GAAW,OAAoC,IAA7BD,EAAgBC,IAGrE,IAAIC,EAAuB,SAASC,EAA4BrS,GAC/D,IAKI2P,EAAUwC,EALV9B,EAAWrQ,EAAK,GAChBsS,EAActS,EAAK,GACnBuS,EAAUvS,EAAK,GAGIuC,EAAI,EAC3B,GAAG8N,EAASmC,MAAK,SAAS7W,GAAM,OAA+B,IAAxBuW,EAAgBvW,MAAe,CACrE,IAAIgU,KAAY2C,EACZ5C,EAAoByB,EAAEmB,EAAa3C,KACrCD,EAAoBQ,EAAEP,GAAY2C,EAAY3C,IAGhD,GAAG4C,EAAS,IAAIhM,EAASgM,EAAQ7C,GAGlC,IADG2C,GAA4BA,EAA2BrS,GACrDuC,EAAI8N,EAAS5N,OAAQF,IACzB4P,EAAU9B,EAAS9N,GAChBmN,EAAoByB,EAAEe,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOzC,EAAoBU,EAAE7J,IAG1BkM,EAAqBC,KAAK,sBAAwBA,KAAK,uBAAyB,GACpFD,EAAmBE,QAAQP,EAAqBQ,KAAK,KAAM,IAC3DH,EAAmB9N,KAAOyN,EAAqBQ,KAAK,KAAMH,EAAmB9N,KAAKiO,KAAKH,I,GC/CvF,IAAII,EAAsBnD,EAAoBU,OAAEP,EAAW,CAAC,MAAM,WAAa,OAAOH,EAAoB,SAC1GmD,EAAsBnD,EAAoBU,EAAEyC,I","sources":["webpack://prueba/./src/components/drawflowApp.vue","webpack://prueba/./src/components/nodes/numericNode.vue","webpack://prueba/./src/components/nodes/nodeHeader.vue","webpack://prueba/./src/components/nodes/nodeHeader.vue?8855","webpack://prueba/./src/components/nodes/numericNode.vue?46af","webpack://prueba/./src/components/nodes/logicOps.vue","webpack://prueba/./src/components/nodes/logicOps.vue?1ece","webpack://prueba/./src/components/nodes/mathOps.vue","webpack://prueba/./src/components/nodes/mathOps.vue?7757","webpack://prueba/./src/components/nodes/ifElse.vue","webpack://prueba/./src/components/nodes/ifElse.vue?d29b","webpack://prueba/./src/components/nodes/FOR.vue","webpack://prueba/./src/components/nodes/FOR.vue?bfbf","webpack://prueba/./src/assets/drawflowExtend.js","webpack://prueba/./src/components/drawflowApp.vue?5154","webpack://prueba/./src/App.vue","webpack://prueba/./src/main.js","webpack://prueba/webpack/bootstrap","webpack://prueba/webpack/runtime/chunk loaded","webpack://prueba/webpack/runtime/compat get default export","webpack://prueba/webpack/runtime/define property getters","webpack://prueba/webpack/runtime/global","webpack://prueba/webpack/runtime/hasOwnProperty shorthand","webpack://prueba/webpack/runtime/make namespace object","webpack://prueba/webpack/runtime/jsonp chunk loading","webpack://prueba/webpack/startup"],"sourcesContent":["<template>\n\n<el-container>\n  <el-container class=\"name\">\n    <h3>Node App</h3>\n  </el-container>\n\n  <el-container>\n      <el-header class=\"header\">\n        <el-button type=\"primary\" @click=\"executeNodeCode\">Execute Node Code</el-button>\n        <el-button type=\"primary\" @click=\"pythonCode\">Make Python Code</el-button>\n        <el-button type=\"primary\" @click=\"clearEditor\">Clear Editor</el-button>\n        <el-button type=\"primary\" @click=\"importEditor\">Import Editor</el-button>\n        <el-button type=\"primary\" @click=\"exportEditor\">Export Editor</el-button>\n      </el-header>\n  </el-container>\n</el-container>\n\n<el-container>\n  <el-container class=\"container\">\n    <el-aside width=\"250px\" class=\"column\">\n        <ul>\n            <li v-for=\"n in listNodes\" :key=\"n\" draggable=\"true\" :data-node=\"n.item\" @dragstart=\"drag($event)\" class=\"drag-drawflow\" >\n                <div class=\"node\" :style=\"`background: ${n.color}`\" >{{ n.name }}</div>\n            </li>\n        </ul>\n    </el-aside>\n    <el-main>\n        <div id=\"drawflow\" @drop=\"drop($event)\" @dragover=\"allowDrop($event)\"></div>\n    </el-main>\n  </el-container>\n</el-container>\n\n<el-dialog\n  v-model=\"dialogVisiblePythonCode\" title=\"pythonCode\" width=\"50%\">\n  <span>Python Code:</span>\n  <pre><code id=\"pythonCode\">{{dialogPythonCode}}</code></pre>\n  <template #footer>\n    <span class=\"dialog-footer\">\n      <el-button @click=\"dialogVisiblePythonCode = false\">Cancel</el-button>\n      <el-button type=\"primary\" @click=\"dialogVisiblePythonCode = false\">Confirm</el-button>\n    </span>\n  </template>\n</el-dialog>\n\n<el-dialog\n    v-model=\"dialogVisibleImport\" title=\"Import\" width=\"50%\">\n    <span>Data:</span>\n    <pre><code id=\"importData\">{{dialogDataImport}}</code></pre>\n    <template #footer>\n      <span class=\"dialog-footer\">\n        <el-button @click=\"dialogVisibleImport = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"dialogVisibleImport = false, importDataConfirm()\">Confirm</el-button>\n      </span>\n    </template>\n  </el-dialog>\n\n<el-dialog\n  v-model=\"dialogVisibleExport\" title=\"Export\" width=\"50%\">\n  <span>Data:</span>\n  <p id=\"exportData\">{{dialogDataExport}}</p>\n  <template #footer>\n    <span class=\"dialog-footer\">\n      <el-button @click=\"dialogVisibleExport = false\">Cancel</el-button>\n      <el-button type=\"primary\" @click=\"dialogVisibleExport = false, exportDataConfirm()\">Confirm</el-button>\n    </span>\n  </template>\n</el-dialog>\n\n  <el-container>\n    <el-container class=\"console\">Console: {{consoleData}}</el-container>\n    <el-container class=\"requests\">Requests: {{requestsData}} </el-container>\n  </el-container>\n\n</template>\n\n<script>\n\nimport DrawflowApp from 'drawflow/dist/drawflow.min.js'\nimport { onMounted, shallowRef, h, getCurrentInstance, render, readonly, ref } from 'vue'\nimport Numeric from './nodes/numericNode.vue'\nimport Logic from './nodes/logicOps.vue'\nimport Math from './nodes/mathOps.vue'\nimport IFELSE from './nodes/ifElse.vue'\nimport FOR from './nodes/FOR.vue'\nimport DrawflowExtend from '../assets/drawflowExtend.js'\nimport axios from 'axios'\n\nexport default {\n  name: 'drawflowApp',\n  setup() {\n    const listNodes = readonly([\n         {\n            name: 'Numeric',\n            color: 'gray',\n            item: 'Numeric',\n            input: 0,\n            output: 1\n\n        },\n         {\n            name: 'Logic',\n            color: 'green',\n            item: 'Logic',\n            input: 2,\n            output: 1\n\n        },\n         {\n            name: 'Math',\n            color: 'brown',\n            item: 'Math',\n            input: 2,\n            output: 1 \n        },\n         {\n            name: 'IF/ELSE',\n            color: 'blue',\n            item: 'IFELSE',\n            input: 3,\n            output: 1\n\n        },\n         {\n            name: 'FOR',\n            color: 'black',\n            item: 'FOR',\n            input: 3,\n            output: 1\n         }\n    ])\n   \n    const editor = shallowRef({});\n    const dialogVisibleExport = ref(false);\n    const dialogVisibleImport = ref(false);\n    const dialogVisiblePythonCode = ref(false);\n    const dialogDataExport = ref({});\n    const dialogDataImport = ref({});\n    const dialogPythonCode = ref('');\n    const Vue = { version: 3, h, render };\n    const internalInstance = getCurrentInstance();\n    internalInstance.appContext.app._context.config.globalProperties.$df = editor;\n    const drawflowExtend = shallowRef({});\n    const consoleData = ref('');\n    const requestsData = ref('');\n\n    function executeNodeCode(){\n      consoleData.value = drawflowExtend.value.executeNodeCode(editor.value.export())\n      \n      //console.log(drawflowExtend.value.data)\n      //console.log(drawflowExtend.value.nodes)\n    }\n\n    function pythonCode(){\n      //crear una funcion de javascript para convertir string/JSON a codigo python\n      dialogPythonCode.value = drawflowExtend.value.makePythonCode(editor.value.export());\n      dialogVisiblePythonCode.value = true;\n    }\n\n    function clearEditor(){\n      editor.value.import({\"drawflow\": {\"Home\": {\"data\": {}}}});\n      //algoritmo.value.obtenerNodos();\n    }\n\n    function importEditor() {\n      //recivir de servidor y guardar en dialogDataImport\n      //let palabra = \"{\\\"drawflow\\\": {\\\"Home\\\": {\\\"data\\\": {}}}}\";\n      //dialogDataImport.value = JSON.parse(palabra);       \n      dialogVisibleImport.value = true;\n      axios.get('http://localhost:3000/readEditor')\n      .then(response => {\n        dialogDataImport.value = response.data;\n      })\n      .catch(error => requestsData.value = error)\n    }\n\n    function importDataConfirm(){\n      if(dialogDataImport.value == 'Empty'){\n        requestsData.value = \"Empty\"\n        return \n      }\n      editor.value.import(JSON.parse(dialogDataImport.value.replace(\"\\\\\\\"\", \"'\")))\n      requestsData.value = \"Imported\"\n    }\n\n    function exportEditor() {\n      dialogDataExport.value = editor.value.export();\n      dialogVisibleExport.value = true;\n    }\n\n    function exportDataConfirm(){\n      var Editor = JSON.stringify(dialogDataExport.value)\n      axios.get('http://localhost:3000/saveEditor?Editor='+Editor)\n      .then(response => {\n        requestsData.value = response.data;\n      })\n      .catch(error => requestsData.value = error)\n      dialogVisibleExport.value = false;\n    }\n\n    const drag = (ev) => {\n      if (ev.type === \"touchstart\") {\n        mobile_item_selec = ev.target.closest(\".drag-drawflow\").getAttribute('data-node');\n      } else {\n      ev.dataTransfer.setData(\"node\", ev.target.getAttribute('data-node'));\n      }\n    }\n    const drop = (ev) => {\n      if (ev.type === \"touchend\") {\n        var parentdrawflow = document.elementFromPoint( mobile_last_move.touches[0].clientX, mobile_last_move.touches[0].clientY).closest(\"#drawflowApp\");\n        if(parentdrawflow != null) {\n          addNodeToDrawFlow(mobile_item_selec, mobile_last_move.touches[0].clientX, mobile_last_move.touches[0].clientY);\n        }\n        mobile_item_selec = '';\n      } else {\n        ev.preventDefault();\n        var data = ev.dataTransfer.getData(\"node\");\n        addNodeToDrawFlow(data, ev.clientX, ev.clientY);\n      }\n\n    }\n    const allowDrop = (ev) => {\n      ev.preventDefault();\n    }\n\n   let mobile_item_selec = '';\n   let mobile_last_move = null;\n   function positionMobile(ev) {\n     mobile_last_move = ev;\n   }\n\n    function addNodeToDrawFlow(name, pos_x, pos_y) {\n      pos_x = pos_x * ( editor.value.precanvas.clientWidth / (editor.value.precanvas.clientWidth * editor.value.zoom)) - (editor.value.precanvas.getBoundingClientRect().x * ( editor.value.precanvas.clientWidth / (editor.value.precanvas.clientWidth * editor.value.zoom)));\n      pos_y = pos_y * ( editor.value.precanvas.clientHeight / (editor.value.precanvas.clientHeight * editor.value.zoom)) - (editor.value.precanvas.getBoundingClientRect().y * ( editor.value.precanvas.clientHeight / (editor.value.precanvas.clientHeight * editor.value.zoom)));\n    \n      const nodeSelected = listNodes.find(ele => ele.item == name);\n      editor.value.addNode(name, nodeSelected.input,  nodeSelected.output, pos_x, pos_y, name, {}, name, 'vue');\n      \n    }\n\n   onMounted(() => {\n      var elements = document.getElementsByClassName('drag-drawflow');\n      for (var i = 0; i < elements.length; i++) {\n        elements[i].addEventListener('touchend', drop, false);\n        elements[i].addEventListener('touchmove', positionMobile, false);\n        elements[i].addEventListener('touchstart', drag, false );\n      }\n      \n       const id = document.getElementById(\"drawflow\");\n       drawflowExtend.value = new DrawflowExtend();\n       editor.value = new DrawflowApp(id, Vue, internalInstance.appContext.app._context);\n       editor.value.start();\n\n       editor.value.registerNode('Numeric', Numeric, {}, {})\n       editor.value.registerNode('Logic', Logic, {}, {})\n       editor.value.registerNode('Math', Math, {}, {})\n       editor.value.registerNode('IFELSE', IFELSE, {}, {})\n       editor.value.registerNode('FOR', FOR, {}, {})\n\n       editor.value.import({\"drawflow\": {\"Home\": {\"data\": {}}}})\n  })\n\n  return {\n    exportEditor, importEditor, listNodes, drag, drop, allowDrop, dialogVisibleExport, dialogVisibleImport, dialogDataExport, dialogDataImport, importDataConfirm, exportDataConfirm, clearEditor, pythonCode, dialogPythonCode, dialogVisiblePythonCode, executeNodeCode, consoleData, requestsData\n  }\n\n  },\n\n  data(){\n    return {\n      NodeApp_pro: \"\"\n    }\n  },\n\n  methods: {\n    mostrarConsola(){\n      console.log(\"funcion trasferida\")\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n@import \"drawflow/dist/drawflow.min.css\";\n@import \"../assets/style.css\";\n\n.name {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-bottom: 1px solid #494949;\n}\n\n.header {\n    display: flex;\n    justify-content: right;\n    align-items: center;\n    border-bottom: 1px solid #494949;\n}\n.container {\n    min-height: calc(100vh - 100px);\n}\n.column {\n    border-right: 1px solid #494949;\n}\n.column ul {\n    padding-inline-start: 0px;\n    padding: 10px 10px;\n \n}\n.column li {\n    background: transparent;\n}\n\n.node {\n    border-radius: 8px;\n    border: 2px solid #494949;\n    display: block;\n    height:60px;\n    line-height:40px;\n    padding: 10px;\n    margin: 10px 0px;\n    cursor: move;\n}\n\n.console {\n    min-width: calc(50vh - 0px);\n    max-width: calc(150vh - 0px);\n}\n\n.requests {\n    min-width: calc(50vh - 0px);\n    max-width: calc(150vh - 0px);\n}\n\n#drawflow {\n  width: 100%;\n  height: 100%;\n  text-align: initial;\n  background: #2b2c30;\n  background-size: 20px 20px;\n  background-image: radial-gradient(#494949 1px, transparent 1px);\n}\n</style>","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"Numeric\"/>\r\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\r\n        <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n    </el-select>\r\n    <br><br>\r\n        <el-input v-model=\"valueVar\" df-valueVar placeholder=\"Please input\" size=\"small\">\r\n        <template #prepend>Var</template>\r\n        </el-input>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    },\r\n    setup() {\r\n        const el = ref(null);\r\n        const nodeId = ref(0);\r\n        let df = null\r\n        const valueVar = ref('');\r\n        const method = ref('');\r\n        const dataNode = ref({});\r\n        const options = readonly([\r\n            {\r\n                value: 'float',\r\n                label: 'float'\r\n            },\r\n            {\r\n                value: 'int',\r\n                label: 'int'\r\n            }\r\n        ]);\r\n        \r\n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\r\n\r\n        const updateSelect = (value) => {\r\n            dataNode.value.data.method = value;\r\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\r\n        }\r\n        \r\n        \r\n        onMounted(async () => {\r\n            await nextTick()\r\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\r\n            dataNode.value = df.getNodeFromId(nodeId.value)\r\n            \r\n            valueVar.value = dataNode.value.data.valueVar;\r\n            method.value = dataNode.value.data.method;\r\n        });\r\n        \r\n        return {\r\n            el, valueVar, method, options, updateSelect\r\n        }\r\n\r\n    }    \r\n    \r\n})\r\n</script>","<template>\n    <div class=\"header\">{{title}}</div>\n</template>\n<script>\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n    props: ['title'],\n})\n</script>\n\n\n<style scoped>\ndiv {\n    background: #494949;\n    margin-top: -15px;\n    margin-left: -15px;\n    margin-right: -15px;\n    padding: 10px 15px;\n    margin-bottom: 15px;\n}\n</style>","import { render } from \"./nodeHeader.vue?vue&type=template&id=27f331dd&scoped=true\"\nimport script from \"./nodeHeader.vue?vue&type=script&lang=js\"\nexport * from \"./nodeHeader.vue?vue&type=script&lang=js\"\n\nimport \"./nodeHeader.vue?vue&type=style&index=0&id=27f331dd&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-27f331dd\"]])\n\nexport default __exports__","import { render } from \"./numericNode.vue?vue&type=template&id=44d3c61f\"\nimport script from \"./numericNode.vue?vue&type=script&lang=js\"\nexport * from \"./numericNode.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"Logic\"/>\r\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\r\n        <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n    </el-select>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    },\r\n    setup() {\r\n        const el = ref(null);\r\n        const nodeId = ref(0);\r\n        let df = null\r\n        const method = ref('');\r\n        const dataNode = ref({});\r\n        const options = readonly([\r\n            {\r\n                value: 'is equal to',\r\n                label: 'is equal to'\r\n            },\r\n            {\r\n                value: 'is less than',\r\n                label: 'is less than'\r\n            },\r\n            {\r\n                value: 'is greater than',\r\n                label: 'is greater than'\r\n            },\r\n            {\r\n                value: 'is less or equal than',\r\n                label: 'is less or equal than'\r\n            },\r\n            {\r\n                value: 'is greater or equal than',\r\n                label: 'is greater or equal than'\r\n            }\r\n        ]);\r\n        \r\n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\r\n\r\n        const updateSelect = (value) => {\r\n            dataNode.value.data.method = value;\r\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\r\n        }\r\n        \r\n        \r\n        onMounted(async () => {\r\n            await nextTick()\r\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\r\n            dataNode.value = df.getNodeFromId(nodeId.value)\r\n            method.value = dataNode.value.data.method;\r\n        });\r\n        \r\n        return {\r\n            el, method, options, updateSelect\r\n        }\r\n\r\n    }    \r\n    \r\n})\r\n</script>","import { render } from \"./logicOps.vue?vue&type=template&id=3c44a184\"\nimport script from \"./logicOps.vue?vue&type=script&lang=js\"\nexport * from \"./logicOps.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"Math\"/>\r\n        <el-select v-model=\"method\" placeholder=\"Select\" @change=\"updateSelect\" size=\"small\" df-method>\r\n        <el-option\r\n        v-for=\"item in options\"\r\n        :key=\"item.value\"\r\n        :label=\"item.label\"\r\n        :value=\"item.value\"\r\n        >\r\n        </el-option>\r\n    </el-select>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, onMounted, getCurrentInstance, readonly, ref, nextTick } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    },\r\n    setup() {\r\n        const el = ref(null);\r\n        const nodeId = ref(0);\r\n        let df = null\r\n        const method = ref('');\r\n        const dataNode = ref({});\r\n        const options = readonly([\r\n            {\r\n                value: 'sum',\r\n                label: 'sum'\r\n            },\r\n            {\r\n                value: 'rest',\r\n                label: 'rest'\r\n            },\r\n            {\r\n                value: 'multiplication',\r\n                label: 'multiplication'\r\n            },\r\n            {\r\n                value: 'divide',\r\n                label: 'divide'\r\n            },\r\n            {\r\n                value: 'pow',\r\n                label: 'pow'\r\n            }\r\n        ]);\r\n        \r\n        df = getCurrentInstance().appContext.config.globalProperties.$df.value;\r\n\r\n        const updateSelect = (value) => {\r\n            dataNode.value.data.method = value;\r\n            df.updateNodeDataFromId(nodeId.value, dataNode.value);\r\n        }\r\n        \r\n        \r\n        onMounted(async () => {\r\n            await nextTick()\r\n            nodeId.value = el.value.parentElement.parentElement.id.slice(5)\r\n            dataNode.value = df.getNodeFromId(nodeId.value)\r\n            \r\n            method.value = dataNode.value.data.method;\r\n        });\r\n        \r\n        return {\r\n            el, method, options, updateSelect\r\n        }\r\n\r\n    }    \r\n    \r\n})\r\n</script>","import { render } from \"./mathOps.vue?vue&type=template&id=b76d1e2c\"\nimport script from \"./mathOps.vue?vue&type=script&lang=js\"\nexport * from \"./mathOps.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"IFELSE\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    }\r\n})\r\n</script>","import { render } from \"./ifElse.vue?vue&type=template&id=f092131a\"\nimport script from \"./ifElse.vue?vue&type=script&lang=js\"\nexport * from \"./ifElse.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div ref=\"el\">\r\n        <nodeHeader  title=\"FOR\"/>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent } from 'vue'\r\nimport nodeHeader from './nodeHeader.vue'\r\n\r\nexport default defineComponent({\r\n    components: {\r\n        nodeHeader\r\n    }\r\n})\r\n</script>","import { render } from \"./FOR.vue?vue&type=template&id=0fbe8026\"\nimport script from \"./FOR.vue?vue&type=script&lang=js\"\nexport * from \"./FOR.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default class drawflowExtend{\r\n    constructor(){\r\n        this.mensaje = 'funcion';\r\n        this.nodes = [];\r\n        this.data = {};\r\n        this.pythonCode = \"new code\"\r\n    }\r\n\r\n    executeNodeCode(objetoJSON){\r\n        var {bool: bool_gn, Msg: Msg_gn} = this.getNodes(objetoJSON);\r\n        if(bool_gn == false){\r\n            return Msg_gn\r\n        }\r\n        var {bool: bool_vn, Msg: Msg_vn} = this.validateNodes();\r\n        if(bool_vn == false){\r\n            return Msg_vn\r\n        }\r\n        var {bool: bool_io, Msg: Msg_io} = this.validateInputsOutputs();\r\n        if(bool_io == false){\r\n            return Msg_io\r\n        }\r\n\r\n        var {bool: bool_ct, Msg: Msg_ct } = this.createTree();\r\n        if(bool_ct == false){\r\n            return Msg_ct\r\n        }\r\n\r\n        var {bool: bool_ee, Msg: Msg_ee} = this.executionErrors();\r\n        if(bool_ee == false){\r\n            return Msg_ee\r\n        }\r\n        var Msg_ec = this.executeProgram();\r\n        return Msg_ec\r\n    }\r\n\r\n    makePythonCode(objetoJSON){\r\n        var {bool: bool_gn, Msg: Msg_gn} = this.getNodes(objetoJSON);\r\n        if(bool_gn == false){\r\n            return Msg_gn\r\n        }\r\n        var {bool: bool_vn, Msg: Msg_vn} = this.validateNodes();\r\n        if(bool_vn == false){\r\n            return Msg_vn\r\n        }\r\n        var {bool: bool_io, Msg: Msg_io} = this.validateInputsOutputs();\r\n        if(bool_io == false){\r\n            return Msg_io\r\n        }\r\n\r\n        var {bool: bool_ct, Msg: Msg_ct } = this.createTree();\r\n        if(bool_ct == false){\r\n            return Msg_ct\r\n        }\r\n\r\n        var {bool: bool_ee, Msg: Msg_ee} = this.executionErrors();\r\n        if(bool_ee == false){\r\n            return Msg_ee\r\n        }\r\n        \r\n        this.getPythonCode();\r\n        return this.pythonCode\r\n    }\r\n\r\n    getNodes(objetoJSON){\r\n        this.data = objetoJSON.drawflow.Home.data\r\n        this.nodes = [];\r\n        var i = 0;\r\n        for (let node in this.data){\r\n            this.nodes[i] = node;\r\n            i++;\r\n        }\r\n        if(this.nodes.length <= 0){\r\n            return {bool: false, Msg: \"No nodes\"}\r\n        }\r\n        return {bool: true, Msg: \"No problems\"}\r\n    }\r\n\r\n    validateNodes(){\r\n        let method = ''\r\n        let variable = ''\r\n        var variableType = \"\"\r\n        for (let node in this.nodes){\r\n            method = '';\r\n            variable = '';\r\n            let thisNode = this.data[this.nodes[node]];\r\n            if (JSON.stringify( thisNode.name ) == '\"Numeric\"' ){\r\n                if ( JSON.stringify(thisNode.data).includes(\"method\") ){\r\n                    method = JSON.stringify(thisNode.data.data.method).replace(/\"/g, '')\r\n                }\r\n                else{\r\n                    return {bool: false, Msg: 'Select variable type of Numeric node'}\r\n                }\r\n                if(JSON.stringify(thisNode.data).includes(\"valuevar\")){\r\n                    variable = JSON.stringify(thisNode.data.valuevar).replace(/\"/g, '')\r\n                }\r\n                else{\r\n                    return {bool: false, Msg: 'Write a value in Numeric Node'}\r\n                }\r\n                \r\n                variableType = variable.match(/^\\d+(\\.\\d+)/g)\r\n                if(variableType != null){\r\n                    if(variableType[0].length != variable.length){\r\n                        return {bool: false, Msg: 'Variable float in Numeric Node is not correct'}\r\n                    }\r\n                    if(method == 'int'){\r\n                        return {bool: false, Msg: 'Variable float in Numeric Node but requires int'}\r\n                    }\r\n                    continue;\r\n                }\r\n                \r\n                variableType = variable.match(/^\\d+/g)\r\n                if(variableType != null){\r\n                    if(variable.includes('.') == true){\r\n                        return {bool: false, Msg: 'Variable float not complete'}\r\n                    }\r\n                    if(variableType[0].length != variable.length ){\r\n                        return {bool: false, Msg: 'Variable int in Numeric Node is not correct'}\r\n                    }\r\n                    if(method == 'float'){\r\n                        return {bool: false, Msg: 'Variable int in Numeric Node but requires float'}\r\n                    }\r\n                    continue;\r\n                }else{\r\n                    return {bool: false, Msg: \"Variable in Numeric Node is not a number\"}\r\n                }\r\n            }\r\n            if (JSON.stringify( thisNode.name ) == \"\\\"Math\\\"\" ){\r\n                if(JSON.stringify(thisNode).includes(\"method\") == false){\r\n                    return {bool: false, Msg: \"Select operation in Math node\"}\r\n                }\r\n            }\r\n            if (JSON.stringify( thisNode.name ) == \"\\\"Logic\\\"\" ){\r\n                if(JSON.stringify(thisNode).includes('method') == false)\r\n                {\r\n                    return {bool: false, Msg: \"Select operation in Logic node\"}\r\n                }\r\n            }\r\n        }\r\n        return {bool: true, Msg: \"Nodes validated\"}\r\n    }\r\n\r\n    validateInputsOutputs(){\r\n        let numberkeys = 0\r\n        let inputOutputName = ''\r\n        let nodeName = ''\r\n        var inputOutput = ['inputs', 'outputs']\r\n        var hasInputOutput = [false, false]\r\n        var IO = 'inputs'\r\n        for (let node in this.nodes){\r\n            let thisNode = this.data[this.nodes[node]];\r\n            hasInputOutput[0] = (Object.keys(thisNode.inputs).length != 0);\r\n            hasInputOutput[1] = (Object.keys(thisNode.outputs).length != 0);\r\n\r\n            for (let i = 0; i < 2; i++){\r\n                IO = inputOutput[i]\r\n                if(hasInputOutput[i]){\r\n                    let thisNodeKeys = Object.keys(thisNode[IO])\r\n                    for (let thisNodeKey in thisNodeKeys){\r\n                        numberkeys = Object.keys(thisNode[IO][thisNodeKeys[thisNodeKey]].connections).length\r\n                        inputOutputName = JSON.stringify(thisNodeKeys[thisNodeKey])\r\n                        nodeName = thisNode.name\r\n                        if(numberkeys == 0){\r\n                            if((IO == 'outputs') && (nodeName == 'Numeric')){\r\n                                return {bool: false, Msg: 'It is missing a connection in ' + inputOutputName + \" from the node \" +  nodeName}\r\n                            }\r\n                        }\r\n                        if(numberkeys > 1){\r\n                            if(IO != 'outputs'){\r\n                                return {bool: false, Msg: 'There are too many connections in ' + inputOutputName + \" from the node \" +  nodeName}\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return {bool: true, Msg: 'Inputs and Outputs validated'}\r\n    }\r\n\r\n    createTree(){\r\n        let branchName = \"\";\r\n        let branchNodes = [];\r\n        let thisTree = [];\r\n        let branchposition = 0;\r\n\r\n        thisTree[branchName] = branchNodes\r\n        this.tree = [[\"\", []]]\r\n      \r\n        var numberNodes = Object.keys(this.data).length\r\n        for(let position = 0; position < numberNodes; position++){\r\n            var node = Object.keys(this.data)[position]\r\n            if(Object.values(this.data[node].inputs).length > 0){\r\n                var numberInputs = Object.keys(this.data[node].inputs).length\r\n                branchName = '';\r\n                branchNodes = [];\r\n                thisTree = [];\r\n                for(let input = 0; input < numberInputs; input++){\r\n                    var connectionslength = Object.values(this.data[node].inputs)[input].connections.length\r\n                    if (connectionslength != 0){\r\n                        branchName = JSON.stringify(node).replace(/\"/g, '\\'')\r\n                        branchNodes.push(JSON.stringify(Object.values(Object.values(this.data[node].inputs)[input].connections)[0].node).replace(/\"/g, ''))\r\n                    }\r\n                }\r\n                if(branchNodes.length > 0){\r\n                    thisTree[branchName] = branchNodes\r\n                    this.tree[branchposition] = thisTree\r\n                    branchposition++\r\n                }\r\n            }\r\n        }\r\n        if(this.tree[0][0] == \"\" && this.tree[0][1].length == 0){\r\n            return {bool: false, Msg: \"There are only Numeric Nodes\"}\r\n        }else{\r\n            return {bool: true, Msg: \"Tree created without problems\"}\r\n        }\r\n    }\r\n\r\n    executionErrors(){\r\n        var treeCheck = []\r\n        var treeCheckNames = []\r\n        var keyNode = \"\"\r\n        var nodeName = \"\"\r\n        var nameInput = \"\"\r\n        var numberNodes = this.tree.length\r\n        var nodeNames = []\r\n\r\n        for (let i = 0; i < numberNodes; i++){\r\n            keyNode = JSON.stringify(Object.keys(this.tree)[i]).replace(/\"/g, '')\r\n            nodeName = JSON.stringify(Object.keys(this.tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            nodeNames[i] = nodeName\r\n            treeCheck[i] = false\r\n            treeCheckNames[i] = this.getName(nodeName, this.nodes, this.data)\r\n        }\r\n\r\n        function check(checkNodeName, tree){\r\n            var inputs = []\r\n            var positionNode = nodeNames.indexOf(checkNodeName)\r\n            if( positionNode == -1){\r\n                \r\n                return {bool: true, Msg: 'Numeric'}\r\n            }\r\n            else{\r\n                if(treeCheck[positionNode] == true){\r\n                    return {bool: true, Msg: treeCheckNames[positionNode]}\r\n                }\r\n                \r\n                var keyNode = JSON.stringify(Object.keys(tree)[positionNode]).replace(/\"/g, '')\r\n                var numberInputs = Object.values(tree[keyNode])[0].length\r\n                \r\n                for (let j = 0; j < numberInputs; j++){\r\n                    nameInput = Object.values(tree[keyNode])[0][j]\r\n                    let {bool, Msg} = check(nameInput, tree)\r\n                    if(bool == false){\r\n                        return {bool, Msg}\r\n                    }\r\n                    else{\r\n                        inputs.push(Msg)\r\n                    }\r\n                }\r\n                treeCheck[positionNode] = true\r\n                var inputValidation1 = ((inputs[0] == 'FOR') || (inputs[0] == 'Numeric') || (inputs[0] == 'Math'))\r\n                var inputValidation2 = ((inputs[1] == 'FOR') || (inputs[1] == 'Numeric') || (inputs[1] == 'Math'))\r\n                \r\n                switch(treeCheckNames[positionNode]){\r\n                    case 'Logic':\r\n                        if((inputValidation1 == true) && (inputValidation2 == true) ){\r\n                            return {bool: true, Msg: 'Logic'}\r\n                        }\r\n                        else{\r\n                            return {bool: false, Msg: \"Execution Error: Nodes in inputs of Logic Node must return a Numeric value\"}\r\n                        }\r\n                    case 'Math':\r\n                        if(inputValidation1 != inputValidation2){\r\n                            return {bool: false, Msg: \"Execution Error: inputs are not the same in the Math Node\"}\r\n                        }\r\n                        else{\r\n                            return {bool: true, Msg: 'Math'}\r\n                        }\r\n                    case 'FOR':\r\n                        if(inputs[2] != 'Math'){\r\n                            return {bool: false, Msg: \"Execution Error: For Node only accepts a Math node\"}\r\n                        }\r\n                        else{\r\n                            return {bool: true, Msg: 'For'}\r\n                        }\r\n                    case 'IFELSE':\r\n                        if(inputs[0] != 'Logic'){\r\n                            return {bool: false, Msg: \"Execution Error: the IF/ELSE Node requires a Logic Node in 'input_1'\"}\r\n                        }\r\n\r\n                        inputValidation1 = ((inputs[1] == 'FOR') || (inputs[1] == 'Numeric') || (inputs[1] == 'Math'));\r\n                        inputValidation2 = ((inputs[2] == 'FOR') || (inputs[2] == 'Numeric') || (inputs[2] == 'Math'));\r\n                        if( (inputValidation1 == true) && (inputValidation2 == true)){\r\n                            treeCheckNames[positionNode] = 'Numeric'\r\n                            return {bool: true, Msg: 'Numeric'}\r\n                        }\r\n                        if(inputs[1] != inputs[2]){\r\n                            return {bool: false, Msg: \"error: inputs are not the same in the IFELSE node\"}\r\n                        }\r\n                        else{\r\n                            treeCheckNames[positionNode] = 'Logic'\r\n                            return {bool: true, Msg: 'Logic'}\r\n                        }\r\n                }\r\n                return {bool: false, Msg: \"Node type not found, modify drawflowExtend.js to add a new node\"}\r\n            }\r\n        }\r\n        for (let i = 0; i < numberNodes; i++){\r\n            keyNode = JSON.stringify(Object.keys(this.tree)[i]).replace(/\"/g, '')\r\n            nodeName = JSON.stringify(Object.keys(this.tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            let{bool, Msg} = check(nodeName, this.tree);\r\n            if (bool == false){\r\n                return {bool, Msg}\r\n            }\r\n        }\r\n        return {bool: true, Msg: 'No execution errors'}\r\n    }\r\n\r\n    executeProgram(){\r\n        var treeCheck = []\r\n        var treeCheckNames = []\r\n        var keyNode = \"\"\r\n        var nodeName = \"\"\r\n        var nameInput = \"\"\r\n        var numberNodes = this.tree.length\r\n        var nodeNames = []\r\n\r\n        let positionRoot = this.getRoot()\r\n\r\n        for (let i = 0; i < numberNodes; i++){\r\n            keyNode = JSON.stringify(Object.keys(this.tree)[i]).replace(/\"/g, '')\r\n            nodeName = JSON.stringify(Object.keys(this.tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            nodeNames[i] = nodeName\r\n            treeCheck[i] = false\r\n            treeCheckNames[i] = this.getName(nodeName, this.nodes, this.data)\r\n        }\r\n\r\n        let getValue = this.getValue\r\n        let getName = this.getName\r\n        let mathOperations = this.mathOperations\r\n        let logicOperators = this.logicOperators\r\n        let getMethod = this.getMethod\r\n\r\n        function forNode(forinit, forend, number1, number2, method){\r\n            let forresult = number1\r\n            for(let i = forinit; i < forend; i++){\r\n                forresult = mathOperations(number1, number2, method)\r\n                number1 = forresult\r\n            }\r\n            return forresult\r\n        }\r\n\r\n        function check(checkNodeName, tree, data, nodes, execute){\r\n            if(getName(checkNodeName, nodes, data) == 'Numeric'){\r\n                if(execute == true){\r\n                    return getValue(checkNodeName, nodes, data)\r\n                }else{\r\n                    return \"Numeric,\" + getValue(checkNodeName, nodes, data) + \",\"\r\n                }\r\n            }\r\n            \r\n            var inputNodeNames = []\r\n            var positionNode = nodeNames.indexOf(checkNodeName)\r\n            var keyNode = JSON.stringify(Object.keys(tree)[positionNode]).replace(/\"/g, '')            \r\n            var numberInputs = Object.values(tree[keyNode])[0].length\r\n\r\n            for (let j = 0; j < numberInputs; j++){\r\n                nameInput = Object.values(tree[keyNode])[0][j]\r\n                inputNodeNames.push(nameInput)\r\n            }\r\n            var number1 = \"\";\r\n            var number2 = \"\";\r\n            var method = \"\";\r\n            var result = \"\";\r\n            var number1Numeric = 0;\r\n            var number2Numeric = 0;\r\n            var startStr = 0;\r\n            var endStr = 0;\r\n            var typeNodeEnd = 0;\r\n            var typeNode = '';\r\n            switch(treeCheckNames[positionNode]){\r\n                case 'Logic':\r\n                    number1 = check(inputNodeNames[0], tree, data, nodes, execute)\r\n                    number2 = check(inputNodeNames[1], tree, data, nodes, execute)\r\n                    method = getMethod(checkNodeName, nodes, data)\r\n                    if(execute == true){\r\n                        result = logicOperators( parseFloat(number1), parseFloat(number2), method)\r\n                        return result.toString()\r\n                    }else{\r\n                        return 'Logic,' + number1 + ',' + number2 + ',' + method + ','\r\n                    }\r\n                case 'Math':\r\n                    number1 = check(inputNodeNames[0], tree, data, nodes, execute)\r\n                    number2 = check(inputNodeNames[1], tree, data, nodes, execute)\r\n                    method = getMethod(checkNodeName, nodes, data)\r\n                    if(execute == true){\r\n                        result = mathOperations( parseFloat(number1), parseFloat(number2), method)\r\n                        return result.toString()\r\n                    }else{\r\n                        return 'Math,' + number1 + number2 + method + ','\r\n                    }\r\n                case 'FOR':\r\n                    var init = check(inputNodeNames[0], tree, data, nodes, true)\r\n                    var end = check(inputNodeNames[1], tree, data, nodes, true)\r\n                    var functionMath = check(inputNodeNames[2], tree, data, nodes, false)\r\n                    typeNodeEnd = functionMath.indexOf(\",\")\r\n                    typeNode = functionMath.substring(0, typeNodeEnd)\r\n                        \r\n                    startStr = 0;\r\n                    endStr = 0;\r\n\r\n                    var parameters = functionMath.split(\",\");\r\n                    number1 = parameters[2];\r\n                    number2 = parameters[4];\r\n                    method = parameters[5];\r\n                    number1Numeric = parseFloat(number1);\r\n                    number2Numeric = parseFloat(number2);\r\n                    if(execute == true){\r\n                        return forNode(Math.round(parseFloat(init)), Math.round(parseFloat(end)), number1Numeric, number2Numeric, method).toString()\r\n                    }else{\r\n                        return 'FOR,'+init+','+end+','+number1+','+number2+','+method+','\r\n                    }\r\n                case 'IFELSE':\r\n                    \r\n                    var condition = check(inputNodeNames[0], tree, data, nodes, true)\r\n                    var function1 = check(inputNodeNames[1], tree, data, nodes, false)\r\n                    var function2 = check(inputNodeNames[2], tree, data, nodes, false)\r\n                    var finalFunction = \"\"\r\n                    \r\n                    if(condition == \"true\"){\r\n                        finalFunction = function1\r\n                    }else{\r\n                        finalFunction = function2\r\n                    }\r\n\r\n                    if(execute == false){\r\n                        return finalFunction\r\n                    }else{\r\n                        typeNodeEnd = finalFunction.indexOf(\",\")\r\n                        typeNode = finalFunction.substring(0, typeNodeEnd)\r\n\r\n                        startStr = 0;\r\n                        endStr = 0;\r\n                        if(typeNode == \"Numeric\"){\r\n                            startStr = finalFunction.indexOf(\",\")\r\n                            endStr = finalFunction.indexOf(\",\",++startStr)\r\n                            return finalFunction.substring(startStr, endStr)\r\n                        }\r\n\r\n                        var operation = []\r\n\r\n                        if(typeNode != \"FOR\"){\r\n                            startStr = finalFunction.indexOf(\",\")\r\n                            \r\n                            for (let i = 0; i < 3; i++){\r\n                                endStr = finalFunction.indexOf(\",\",++startStr)\r\n                                operation.push(finalFunction.substring(startStr, endStr))\r\n                                startStr = endStr\r\n                            }\r\n                            if(inputNodeNames[1] == 'int'){\r\n                                number1Numeric = parseInt(operation[0])\r\n                            }else{\r\n                                number1Numeric = parseFloat(operation[0])\r\n                            }\r\n                            if(inputNodeNames[2] == 'int'){\r\n                                number2Numeric = parseInt(operation[1])\r\n                            }else{\r\n                                number2Numeric = parseFloat(operation[1])\r\n                            }\r\n                        \r\n                            if(typeNode == \"Logic\"){\r\n                                console.log( logicOperators( parseFloat(operation[0]), parseFloat(operation[1]),  operation[2] ) )\r\n                                return logicOperators( number1Numeric, number2Numeric,  operation[2] ).toString()\r\n                            }\r\n                            if(typeNode == \"Math\"){\r\n                                return mathOperations( number1Numeric, number2Numeric,  operation[2] ).toString()\r\n                            }\r\n                        }\r\n                        \r\n                        if(typeNode == 'FOR'){\r\n                            startStr = finalFunction.indexOf(\",\")\r\n                            for (let i = 0; i < 7; i++){\r\n                                endStr = finalFunction.indexOf(\",\",++startStr)\r\n                                operation.push(finalFunction.substring(startStr, endStr))\r\n                                startStr = endStr\r\n                            }\r\n                            return forNode(Math.round(parseFloat(operation[0])), Math.round(parseFloat(operation[1])), parseFloat(operation[2]), parseFloat(operation[3]), operation[4])\r\n                        }\r\n                    }\r\n            }\r\n            return \"Node not found\"\r\n        }\r\n\r\n        var nodeNameRoot = nodeNames[parseInt(positionRoot)]\r\n        let finalResult = \"\"\r\n        finalResult = check(nodeNameRoot, this.tree, this.data, this.nodes, true);\r\n        return finalResult \r\n    }\r\n\r\n    getPythonCode(){\r\n        var treeCheck = []\r\n        var treeCheckNames = []\r\n        var numberInputs = 0\r\n        var keyNode = \"\"\r\n        var nodeName = \"\"\r\n        var nameInput = \"\"\r\n        var numberNodes = this.tree.length\r\n        var nodeNames = []\r\n        var numberList = []\r\n        var numberListValues = []\r\n\r\n        let positionRoot = this.getRoot()\r\n\r\n        for (let i = 0; i < numberNodes; i++){\r\n            keyNode = JSON.stringify(Object.keys(this.tree)[i]).replace(/\"/g, '')\r\n            nodeName = JSON.stringify(Object.keys(this.tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            nodeNames[i] = nodeName\r\n            treeCheck[i] = false\r\n            treeCheckNames[i] = this.getName(nodeName, this.nodes, this.data)\r\n        }\r\n\r\n        let getValue = this.getValue\r\n        let getName = this.getName\r\n        let mathOperationsPython = this.mathOperationsPython\r\n        let logicOperatorsPython = this.logicOperatorsPython\r\n        let getMethod = this.getMethod\r\n        let getNamePython = this.getNamePython\r\n        let indentCode = this.indentCode\r\n\r\n        function check(checkNodeName, tree, data, nodes, For){\r\n            if(getName(checkNodeName, nodes, data) == 'Numeric'){\r\n                var numberName = \"N\" + checkNodeName\r\n                if(numberList.indexOf(numberName) == -1){\r\n                    numberList.push(numberName)\r\n                    numberListValues.push(getValue(checkNodeName, nodes, data))\r\n                }        \r\n                return numberName\r\n            }\r\n            \r\n            var inputNodeNames = []\r\n            var positionNode = nodeNames.indexOf(checkNodeName)\r\n            keyNode = JSON.stringify(Object.keys(tree)[positionNode]).replace(/\"/g, '')            \r\n            nodeName = JSON.stringify(Object.keys(tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            numberInputs = Object.values(tree[keyNode])[0].length\r\n\r\n            for (let j = 0; j < numberInputs; j++){\r\n                nameInput = Object.values(tree[keyNode])[0][j]\r\n                inputNodeNames.push(nameInput)\r\n            }\r\n            var number1 = \"\";\r\n            var number2 = \"\";\r\n            var method = \"\";\r\n            var nameLong = \"\";\r\n            var nameShort = \"\";\r\n\r\n            switch(treeCheckNames[positionNode]){\r\n                case 'Logic':\r\n                    number1 = check(inputNodeNames[0], tree, data, nodes, false)\r\n                    number2 = check(inputNodeNames[1], tree, data, nodes, false)\r\n                    method = getMethod(checkNodeName, nodes, data)\r\n                    return \"\\nL\"+checkNodeName+\" = ( \"+number1+' '+logicOperatorsPython(method)+' '+number2+\" )\"\r\n                case 'Math':\r\n                    var Mathstr = \"\"\r\n                    number1 = check(inputNodeNames[0], tree, data, nodes, false)\r\n                    number2 = check(inputNodeNames[1], tree, data, nodes, false)\r\n                    method = getMethod(checkNodeName, nodes, data)\r\n                    \r\n                    nameLong = getName(inputNodeNames[0], nodes, data)\r\n                    nameShort = getNamePython(nameLong)\r\n                    var out = nameShort + inputNodeNames[0]\r\n                    if(nameShort != 'N'){\r\n                        Mathstr = Mathstr + number1\r\n                        number1 = out\r\n                    }\r\n                    \r\n                    nameLong = getName(inputNodeNames[1], nodes, data)\r\n                    nameShort = getNamePython(nameLong)\r\n                    out = nameShort + inputNodeNames[1]\r\n                    if(nameShort != 'N'){\r\n                        Mathstr = Mathstr + number2\r\n                        number2 = out\r\n                    }\r\n                    \r\n                    if(For == true){\r\n                        return number1+\",\"+number2+\",\"+method+','\r\n                    }else{\r\n                        return Mathstr+\"\\nM\"+checkNodeName+\" = \"+number1+' '+mathOperationsPython(method)+' '+number2\r\n                    }\r\n                case 'FOR':\r\n                    var init = check(inputNodeNames[0], tree, data, nodes, true)\r\n                    var end = check(inputNodeNames[1], tree, data, nodes, true)\r\n                    var functionMath = check(inputNodeNames[2], tree, data, nodes, true)\r\n                    var operations = functionMath.split(\",\");\r\n                    return '\\nF'+checkNodeName+\" = \"+operations[0]+'\\nfor _ in range('+init+', '+end+')'+':'+'\\n\\tF'+checkNodeName+' = F'+checkNodeName+' '+mathOperationsPython(operations[2])+' '+operations[1]\r\n                \r\n                case 'IFELSE':\r\n                var IEout = \"\\nIE\"+checkNodeName+\"=\"\r\n                var condition = check(inputNodeNames[0], tree, data, nodes, false)\r\n                var function1 = check(inputNodeNames[1], tree, data, nodes, false)\r\n                var function2 = check(inputNodeNames[2], tree, data, nodes, false)\r\n                nameLong = getName(inputNodeNames[1], nodes, data)\r\n                nameShort = getNamePython(nameLong)\r\n                var out1 = nameShort + inputNodeNames[1]\r\n\r\n                if(nameShort == 'N'){\r\n                    out1 = IEout + out1\r\n                }else{\r\n                    out1 = function1 + IEout + out1\r\n                }\r\n\r\n                nameLong = getName(inputNodeNames[2], nodes, data)\r\n                nameShort = getNamePython(nameLong)\r\n                var out2 = nameShort + inputNodeNames[2]\r\n                \r\n                if(nameShort == 'N'){\r\n                    out2 = IEout + out2\r\n                }else{\r\n                    out2 = function2 + IEout + out2\r\n                }\r\n                \r\n                out1 = indentCode(out1)\r\n                out2 = indentCode(out2)\r\n\r\n                if(For == true){\r\n                    //var function1Parameters = function1.split(\",\")\r\n                    //var function2Parameters = function2.split(\",\")\r\n                }else{\r\n                    var ifElseCode = condition+\"\\nif(L\"+inputNodeNames[0]+\"):\"+out1+\" \\nelse:\"+out2\r\n                    return ifElseCode\r\n                }\r\n                break\r\n            }\r\n            return \"Node not found\"\r\n        }\r\n\r\n        var nodeNameRoot = nodeNames[parseInt(positionRoot)]\r\n        let program = \"\"\r\n        program = check(nodeNameRoot, this.tree, this.data, this.nodes, false);\r\n        var numberGlobalVars = numberList.length \r\n        var stringGlobalVars = \"\"\r\n        for(let pos = 0; pos <  numberGlobalVars; pos++){\r\n            stringGlobalVars = stringGlobalVars + \"\\n\" + numberList[pos]+\" = \"+numberListValues[pos]\r\n        }\r\n        var finalResult = stringGlobalVars + program\r\n        finalResult = finalResult.replace(\"\\n\", \"\")\r\n        var nameLong = getName(nodeNameRoot, this.nodes, this.data)\r\n        var nameShort = getNamePython(nameLong)\r\n        this.pythonCode = finalResult + '\\nprint('+nameShort+nodeNameRoot+')'\r\n    }\r\n\r\n    getRoot(){\r\n        var treeCheck = []\r\n        var treeCheckNames = []\r\n        var treeCheckNumbers = []\r\n        var keyNode = \"\";\r\n        var nodeName = \"\"\r\n        var numberNodes = this.tree.length;\r\n        var nodeNames = []\r\n\r\n        for (let i = 0; i < numberNodes; i++){\r\n            keyNode = JSON.stringify(Object.keys(this.tree)[i]).replace(/\"/g, '')\r\n            nodeName = JSON.stringify(Object.keys(this.tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            nodeNames[i] = nodeName\r\n            treeCheck[i] = false\r\n            treeCheckNames[i] = this.getName(nodeName, this.nodes, this.data)\r\n        }\r\n        \r\n        function check(checkNodeName, tree){\r\n            var positionNode = nodeNames.indexOf(checkNodeName)\r\n            if( positionNode == -1){\r\n                return 1;\r\n            }\r\n            else{\r\n                if(treeCheck[positionNode] == true){\r\n                    return treeCheckNumbers[positionNode];\r\n                }\r\n                var keyNode = JSON.stringify(Object.keys(tree)[positionNode]).replace(/\"/g, '')\r\n                var numberInputs = Object.values(tree[keyNode])[0].length\r\n                var numberChecks = 0\r\n                var nameInput = \"\"\r\n                for (let j = 0; j < numberInputs; j++){\r\n                    nameInput = Object.values(tree[keyNode])[0][j]\r\n                    numberChecks += check(nameInput, tree)\r\n                }\r\n\r\n                treeCheckNumbers[positionNode] = numberChecks;\r\n                treeCheck[positionNode] = true\r\n                return treeCheckNumbers[positionNode];\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < numberNodes; i++){\r\n            keyNode = JSON.stringify(Object.keys(this.tree)[i]).replace(/\"/g, '')\r\n            nodeName = JSON.stringify(Object.keys(this.tree[keyNode])[0]).replace(/\"/g, '').replace(/'/g, '')\r\n            check(nodeName, this.tree);\r\n        }\r\n\r\n        var max = 0;\r\n        var position = -1;\r\n        var finalPosition = 0;\r\n        for (let number in treeCheckNumbers){\r\n            position++;\r\n            if(treeCheckNumbers[number] > max){\r\n                max = treeCheckNumbers[number]\r\n                finalPosition = position;\r\n            }\r\n        }\r\n        return finalPosition\r\n    }\r\n\r\n    getName(nodeCode, nodes, data){\r\n        for (let node in nodes){\r\n            let thisNode = data[nodes[node]];\r\n            let thisnodeName = JSON.stringify(thisNode.id)\r\n            if (thisnodeName == nodeCode){\r\n                return JSON.stringify(thisNode.name).replace(/\"/g, '')\r\n            }\r\n        }\r\n        return ''\r\n    }\r\n\r\n    getValue(nodeCode, nodes, data){\r\n        for (let node in nodes){\r\n            let thisNode = data[nodes[node]];\r\n            let thisnodeName = JSON.stringify(thisNode.id)\r\n            if (thisnodeName == nodeCode){\r\n                if(JSON.stringify(thisNode.name).replace(/\"/g, '') == 'Numeric'){\r\n                    return JSON.stringify(thisNode.data.valuevar).replace(/\"/g, '') \r\n                }\r\n            }\r\n        }\r\n        console.log(\"this node does not have values\")\r\n        return ''\r\n    }\r\n\r\n    getMethod(nodeCode, nodes, data){\r\n        for (let node in nodes){\r\n            let thisNode = data[nodes[node]];\r\n            let thisnodeName = JSON.stringify(thisNode.id)\r\n            if (thisnodeName == nodeCode){\r\n                var name = JSON.stringify(thisNode.name).replace(/\"/g, '') \r\n                if(name == 'Math' || name == 'Logic'){\r\n                    return JSON.stringify(thisNode.data.data.method).replace(/\"/g, '') \r\n                }\r\n            }\r\n        }\r\n        console.log(\"this node does not have values\")\r\n        return ''\r\n    }\r\n\r\n    logicOperators(number1, number2, method){\r\n        switch(method){\r\n            case 'is equal to':\r\n                return number1 == number2;\r\n            case 'is less than':\r\n                return number1 < number2;\r\n            case 'is greater than':\r\n                return number1 > number2;\r\n            case 'is less or equal than':\r\n                return number1 <= number2;\r\n            case 'is greater or equal than':\r\n                return number1 >= number2;\r\n        }\r\n    }\r\n\r\n    mathOperations(number1, number2, method){\r\n        switch(method){\r\n            case 'sum':\r\n                return number1 + number2;\r\n            case 'rest':\r\n                return number1 - number2;\r\n            case 'multiplication':\r\n                return number1 * number2;\r\n            case 'divide':\r\n                return number1 / number2;\r\n            case 'pow':\r\n                return Math.pow(number1, number2);\r\n        }\r\n    }\r\n\r\n    logicOperatorsPython(method){\r\n        switch(method){\r\n            case 'is equal to':\r\n                return '==';\r\n            case 'is less than':\r\n                return \"<\";\r\n            case 'is greater than':\r\n                return \">\";\r\n            case 'is less or equal than':\r\n                return '<=';\r\n            case 'is greater or equal than':\r\n                return '>=';\r\n        }\r\n    }\r\n\r\n    mathOperationsPython(method){\r\n        switch(method){\r\n            case 'sum':\r\n                return '+';\r\n            case 'rest':\r\n                return '-';\r\n            case 'multiplication':\r\n                return '*';\r\n            case 'divide':\r\n                return '/';\r\n            case 'pow':\r\n                return '**';\r\n        }\r\n    }\r\n\r\n    getNamePython(name){\r\n        switch(name){\r\n            case 'Numeric':\r\n                return 'N';\r\n            case 'Logic':\r\n                return 'L'\r\n            case 'FOR':\r\n                return 'F'\r\n            case 'IFELSE':\r\n                return 'IE'\r\n            case 'Math':\r\n                return 'M'\r\n        }\r\n    }\r\n\r\n    indentCode(pythonCode){ \r\n        var pyhtonCode_new = pythonCode.replaceAll(\"\\n\", \"\\n\\t\") \r\n        return pyhtonCode_new\r\n    }\r\n}","import { render } from \"./drawflowApp.vue?vue&type=template&id=7d02eb97&scoped=true\"\nimport script from \"./drawflowApp.vue?vue&type=script&lang=js\"\nexport * from \"./drawflowApp.vue?vue&type=script&lang=js\"\n\nimport \"./drawflowApp.vue?vue&type=style&index=0&id=7d02eb97&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\xmax1\\\\Desktop\\\\pruebavue\\\\prueba\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7d02eb97\"]])\n\nexport default __exports__","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2f8aed0a&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\n\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as Icons from '@element-plus/icons'\n\nimport App from './App.vue'\n\n//createApp(App).mount('#app')\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.use(Icons)\n\napp.mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkprueba\"] = self[\"webpackChunkprueba\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8106); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createElementVNode","id","class","_createVNode","_component_el_container","_hoisted_1","_component_el_header","_component_el_button","type","onClick","$setup","_component_el_aside","width","_createElementBlock","_Fragment","_renderList","n","key","draggable","item","onDragstart","$event","style","color","name","_component_el_main","onDrop","onDragover","_component_el_dialog","title","footer","_hoisted_8","_toDisplayString","_hoisted_13","_hoisted_18","ref","_component_nodeHeader","_component_el_select","_ctx","placeholder","onChange","size","_createBlock","_component_el_option","value","label","_hoisted_2","_hoisted_3","_component_el_input","prepend","defineComponent","props","__exports__","components","nodeHeader","setup","el","nodeId","df","valueVar","method","dataNode","options","readonly","getCurrentInstance","appContext","config","globalProperties","$df","updateSelect","data","updateNodeDataFromId","onMounted","async","nextTick","parentElement","slice","getNodeFromId","drawflowExtend","constructor","this","mensaje","nodes","pythonCode","executeNodeCode","objetoJSON","bool","bool_gn","Msg","Msg_gn","getNodes","bool_vn","Msg_vn","validateNodes","bool_io","Msg_io","validateInputsOutputs","bool_ct","Msg_ct","createTree","bool_ee","Msg_ee","executionErrors","Msg_ec","executeProgram","makePythonCode","getPythonCode","drawflow","Home","i","node","length","variable","variableType","thisNode","JSON","stringify","includes","replace","valuevar","match","numberkeys","inputOutputName","nodeName","inputOutput","hasInputOutput","IO","Object","keys","inputs","outputs","thisNodeKeys","thisNodeKey","connections","branchName","branchNodes","thisTree","branchposition","tree","numberNodes","position","values","numberInputs","input","connectionslength","push","treeCheck","treeCheckNames","keyNode","nameInput","nodeNames","getName","check","checkNodeName","positionNode","indexOf","j","inputValidation1","inputValidation2","positionRoot","getRoot","getValue","mathOperations","logicOperators","getMethod","forNode","forinit","forend","number1","number2","forresult","execute","inputNodeNames","result","number1Numeric","number2Numeric","startStr","endStr","typeNodeEnd","typeNode","parseFloat","toString","init","end","functionMath","substring","parameters","split","Math","round","condition","function1","function2","finalFunction","operation","parseInt","console","log","nodeNameRoot","finalResult","numberList","numberListValues","mathOperationsPython","logicOperatorsPython","getNamePython","indentCode","For","numberName","nameLong","nameShort","Mathstr","out","operations","IEout","out1","out2","ifElseCode","program","numberGlobalVars","stringGlobalVars","pos","treeCheckNumbers","numberChecks","max","finalPosition","number","nodeCode","thisnodeName","pow","pyhtonCode_new","replaceAll","listNodes","output","editor","shallowRef","dialogVisibleExport","dialogVisibleImport","dialogVisiblePythonCode","dialogDataExport","dialogDataImport","dialogPythonCode","Vue","version","h","render","internalInstance","app","_context","consoleData","requestsData","export","clearEditor","import","importEditor","axios","then","response","catch","error","importDataConfirm","parse","exportEditor","exportDataConfirm","Editor","drag","ev","mobile_item_selec","target","closest","getAttribute","dataTransfer","setData","drop","parentdrawflow","document","elementFromPoint","mobile_last_move","touches","clientX","clientY","addNodeToDrawFlow","preventDefault","getData","allowDrop","positionMobile","pos_x","pos_y","precanvas","clientWidth","zoom","getBoundingClientRect","x","clientHeight","y","nodeSelected","find","ele","addNode","elements","getElementsByClassName","addEventListener","getElementById","DrawflowExtend","DrawflowApp","start","registerNode","Numeric","Logic","IFELSE","FOR","NodeApp_pro","methods","mostrarConsola","createApp","App","use","ElementPlus","Icons","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}